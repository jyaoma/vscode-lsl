{
	"llAbs": {
		"returnType": "integer",
		"returns": "that is the positive version of val.",
		"parameters": [
			{
				"type": "integer",
				"name": "val",
				"subtype": null,
				"description": "Any integer value"
			}
		],
		"id": 6,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAbs",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAddToLandPassList": {
		"description": "Add avatar to the land pass list for hours, or indefinitely if hours is zero.",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			},
			{
				"type": "float",
				"name": "hours",
				"subtype": null,
				"description": "range 0.0 <= hours <= 144.0"
			}
		],
		"id": 240,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAddToLandPassList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAdjustDamage": {
		"returnType": "",
		"description": "The llAdjustDamage modifies the amount of damage that will be applied by the current on_damage event after it has completed processing. ",
		"parameters": [
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": "The index of the damage event to be modified."
			},
			{
				"type": "float",
				"name": "new_damage",
				"subtype": null,
				"description": "A new damage value to be applied or distributed after on_damage processing."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAdjustDamage",
		"experimental": true,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAcos": {
		"returnType": "float",
		"returns": "that is the arccosine in radians of val",
		"parameters": [
			{
				"type": "float",
				"name": "val",
				"subtype": null,
				"description": "must fall in the range -1.0 <= val <= 1.0"
			}
		],
		"id": 172,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAcos",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAdjustSoundVolume": {
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": ""
			},
			{
				"type": "float",
				"name": "volume",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAdjustSoundVolume",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAddToLandBanList": {
		"description": "Add avatar to the land ban list for hours, or indefinitely if hours is zero.",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			},
			{
				"type": "float",
				"name": "hours",
				"subtype": null,
				"description": ""
			}
		],
		"id": 310,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAddToLandBanList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetObjectLinkKey": {
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetObjectLinkKey",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAvatarOnSitTarget": {
		"returnType": "key",
		"returns": "that is the UUID of the user seated on the prim.",
		"parameters": [],
		"id": 239,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAvatarOnSitTarget",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDumpList2String": {
		"returnType": "string",
		"returns": "that is the list src converted to a string with separator between the entries.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "separator",
				"subtype": null,
				"description": ""
			}
		],
		"id": 245,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDumpList2String",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llCloseRemoteDataChannel": {
		"description": "Closes XML-RPC channel.",
		"parameters": [
			{
				"type": "key",
				"name": "channel",
				"subtype": null,
				"description": ""
			}
		],
		"id": 257,
		"sleep": 1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llCloseRemoteDataChannel",
		"deprecated": "LSL_http_server",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llBase64ToInteger": {
		"returnType": "integer",
		"returns": "that is str Base64 decoded as a big endian integer.",
		"parameters": [
			{
				"type": "string",
				"name": "str",
				"subtype": null,
				"description": "Base64 string"
			}
		],
		"id": 281,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llBase64ToInteger",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAxes2Rot": {
		"returnType": "rotation",
		"returns": "that is defined by the 3 coordinate axes",
		"parameters": [
			{
				"type": "vector",
				"name": "fwd",
				"subtype": null,
				"description": ""
			},
			{
				"type": "vector",
				"name": "left",
				"subtype": null,
				"description": ""
			},
			{
				"type": "vector",
				"name": "up",
				"subtype": null,
				"description": ""
			}
		],
		"id": 17,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAxes2Rot",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAngleBetween": {
		"returnType": "float",
		"returns": "that is the angle in radians between rotation a and rotation b.",
		"parameters": [
			{
				"type": "rotation",
				"name": "a",
				"subtype": null,
				"description": "start rotation"
			},
			{
				"type": "rotation",
				"name": "b",
				"subtype": null,
				"description": "end rotation"
			}
		],
		"id": 174,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAngleBetween",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llBase64ToString": {
		"returnType": "string",
		"returns": "that is the Base64 str decoded into a conventional string, interpreting the Base64-encoded bytes as UTF-8 character sequence.",
		"parameters": [
			{
				"type": "string",
				"name": "str",
				"subtype": null,
				"description": "Base64 string"
			}
		],
		"id": 261,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llBase64ToString",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetNotecardLineSync": {
		"returnType": "string",
		"description": "Gets the line of the notecard name from the region's notecard cache immediately without raising a dataserver event.",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "line",
				"subtype": null,
				"description": "Line number in a notecard (the index starts at zero)."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetNotecardLineSync",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAgentInExperience": {
		"returnType": "integer",
		"returns": "that is TRUE if the agent is in the experience and the experience can run in the current region.",
		"description": "Determines whether or not the specified agent is in the script's experience.",
		"parameters": [
			{
				"type": "key",
				"name": "agent",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llAgentInExperience",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llCeil": {
		"returnType": "integer",
		"returns": "that is the integer value of val rounded towards positive infinity (return >= val).",
		"parameters": [
			{
				"type": "float",
				"name": "val",
				"subtype": null,
				"description": "Any valid float value"
			}
		],
		"id": 10,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llCeil",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llClearCameraParams": {
		"description": "Resets all camera parameters to default values and turns off scripted camera control.",
		"parameters": [],
		"id": 314,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llClearCameraParams",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAxisAngle2Rot": {
		"returnType": "rotation",
		"returns": "that is a generated angle about axis",
		"parameters": [
			{
				"type": "vector",
				"name": "axis",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "angle",
				"subtype": null,
				"description": "expressed in radians."
			}
		],
		"id": 169,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAxisAngle2Rot",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetMoonRotation": {
		"returnType": "rotation",
		"description": "Return the rotation applied to the moon for the parcel at the location of the object containing the script.  These function are altitude aware and so will pick up the moon for their current track. llGetRegionMoonRotation returns the rotation applied at the region level, llGetMoonRotation does the same for the parcel.  If there is no custom environment applied to parcel llGetMoonRotation returns the same value as llGetRegionMoonRotation.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetMoonRotation",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llChar": {
		"returnType": "string",
		"returns": "",
		"description": "Construct a single character string from the supplied Unicode value.",
		"parameters": [
			{
				"type": "integer",
				"name": "val",
				"subtype": null,
				"description": "Unicode value for character."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llChar",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetListLength": {
		"returnType": "integer",
		"returns": "that is the number of elements in the list src.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			}
		],
		"id": 185,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetListLength",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llHash": {
		"returnType": "integer",
		"returns": "",
		"description": "Returns a 32bit hash for the provided string.  Returns 0 if the input string is empty.",
		"parameters": [
			{
				"type": "string",
				"name": "val",
				"subtype": null,
				"description": "String to hash."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llHash",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llMinEventDelay": {
		"description": "Set the minimum time between events being handled.Defaults and minimums vary by the event type, see LSL Delay.",
		"parameters": [
			{
				"type": "float",
				"name": "delay",
				"subtype": null,
				"description": "time in seconds"
			}
		],
		"id": 125,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llMinEventDelay",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llClearLinkMedia": {
		"returnType": "integer",
		"returns": "that is a STATUS_* flag which details the success/failure of the operation.",
		"description": "Clears (deletes) the media and all params from the given face on the linked prim(s).",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": "Link number (0: unlinked, 1: root prim, >1: child prims and seated avatars) or a LINK_* flag "
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number "
			}
		],
		"id": null,
		"sleep": 0,
		"energy": 0,
		"wiki": "https://wiki.secondlife.com/wiki/llClearLinkMedia",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetLocalRot": {
		"returnType": "rotation",
		"parameters": [],
		"id": 63,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetLocalRot",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedGroup": {
		"returnType": "integer",
		"returns": "that is TRUE if the detected object or agent has the same active group as the prim containing the script. Otherwise FALSE is returned.",
		"parameters": [
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 39,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedGroup",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetMoonDirection": {
		"returnType": "vector",
		"description": "Returns a normalized vector to the current moon position at the location of object containing the script.  llGetMoonDirection is the vector to the parcel's moon, llGetRegionMoonDirection is the vector to region's moon. If there is no custom environment set for the current parcel llGetMoonDirection returns the direction to the region's moon. These functions are altitude aware.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetMoonDirection",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llEjectFromLand": {
		"description": "Ejects avatar from the parcel.",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			}
		],
		"id": 213,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llEjectFromLand",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAvatarOnLinkSitTarget": {
		"returnType": "key",
		"returns": "that is the UUID of the user seated on the prim.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": ""
			}
		],
		"id": null,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAvatarOnLinkSitTarget",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetNumberOfPrims": {
		"returnType": "integer",
		"returns": "that is the number of prims in a link set the script is attached to.",
		"parameters": [],
		"id": 275,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetNumberOfPrims",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGiveMoney": {
		"returnType": "integer",
		"returns": "that is always zero. In contrast llTransferLindenDollars returns a key that can be used to match the function call to the resulting transaction_result event and the [https://secondlife.com/my/account/transactions.php transaction history].",
		"description": "Transfer amount of L$ money from script owner to destination avatar.",
		"parameters": [
			{
				"type": "key",
				"name": "destination",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "amount",
				"subtype": null,
				"description": "number of L$, must be greater than zero, (amount &gt; 0)"
			}
		],
		"id": 99,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGiveMoney",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGiveInventory": {
		"description": "Give inventory to destination.",
		"parameters": [
			{
				"type": "key",
				"name": "destination",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "inventory",
				"subtype": null,
				"description": ""
			}
		],
		"id": 150,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGiveInventory",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAttachToAvatar": {
		"description": "Attaches the object to the avatar who has granted permission to the script. The object is taken into the users inventory and attached to attach_point.",
		"parameters": [
			{
				"type": "integer",
				"name": "attach_point",
				"subtype": "attach_point",
				"description": "ATTACH_* constant or valid value (see the tables below)"
			}
		],
		"id": 113,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAttachToAvatar",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llApplyImpulse": {
		"description": "Applies impulse to object",
		"parameters": [
			{
				"type": "vector",
				"name": "momentum",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "local",
				"subtype": "boolean",
				"description": "boolean, if TRUE force is treated as a local directional vector, if FALSE force is treated as a region directional vector "
			}
		],
		"id": 72,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llApplyImpulse",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAttachToAvatarTemp": {
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llAttachToAvatarTemp",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAtan2": {
		"returnType": "float",
		"returns": "that is the Atan2 of y, x.",
		"parameters": [
			{
				"type": "float",
				"name": "y",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "x",
				"subtype": null,
				"description": ""
			}
		],
		"id": 3,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAtan2",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAsin": {
		"returnType": "float",
		"returns": "that is the arcsine in radians of val",
		"parameters": [
			{
				"type": "float",
				"name": "val",
				"subtype": null,
				"description": "must fall in the range -1.0 <= val <= 1.0"
			}
		],
		"id": 173,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAsin",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetLinkKey": {
		"returnType": "key",
		"parameters": [
			{
				"type": "key",
				"name": "object_id",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": "Link number (0: unlinked, 1: root prim, >1: child prims and seated avatars) or a LINK_* flag "
			}
		],
		"id": 144,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetLinkKey",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetLinkNumberOfSides": {
		"returnType": "integer",
		"returns": "that is the number of faces (or sides) of the prim link.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": ""
			}
		],
		"id": 357,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetLinkNumberOfSides",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetTextureRot": {
		"returnType": "float",
		"returns": "that is the texture rotation, expressed as an angle, on face",
		"parameters": [
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number or ALL_SIDES "
			}
		],
		"id": 180,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetTextureRot",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetPos": {
		"description": "Moves the object or primitive towards pos without using physics.",
		"parameters": [
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": "(see #Specification)."
			}
		],
		"id": 58,
		"sleep": 0.2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetPos",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetMaxScaleFactor": {
		"returnType": "float",
		"returns": "that is the largest scaling factor that can be used with llScaleByFactor to resize the object.  This maximum is determined by the Linkability Rules and prim scale limits.",
		"parameters": [],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetMaxScaleFactor",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llApplyRotationalImpulse": {
		"description": "Applies rotational impulse to object.",
		"parameters": [
			{
				"type": "vector",
				"name": "force",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "local",
				"subtype": "boolean",
				"description": "boolean, if TRUE force is treated as a local directional vector, if FALSE force is treated as a region directional vector "
			}
		],
		"id": 73,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llApplyRotationalImpulse",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llCos": {
		"returnType": "float",
		"returns": "that is the cosine of theta.",
		"parameters": [
			{
				"type": "float",
				"name": "theta",
				"subtype": null,
				"description": ""
			}
		],
		"id": 1,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llCos",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetNextEmail": {
		"description": "Get the next queued email that comes from address, with specified subject.",
		"parameters": [
			{
				"type": "string",
				"name": "address",
				"subtype": null,
				"description": "Sender's mail address"
			},
			{
				"type": "string",
				"name": "subject",
				"subtype": null,
				"description": "Mail subject"
			}
		],
		"id": 120,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetNextEmail",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llCastRay": {
		"returnType": "list",
		"returns": "of strided values on a successful hit, with an additional integer status_code at the end.Each stride consists of two mandatory values {key uuid, vector position} and optionally {integer link_number, vector normal}. (See RC_DATA_FLAGS for details.)A negative status_code is an error code, otherwise it is the number of hits (and strides) returned.",
		"description": "Cast a line from start to end and report collision data for intersections with objects.",
		"parameters": [
			{
				"type": "vector",
				"name": "start",
				"subtype": null,
				"description": "starting location "
			},
			{
				"type": "vector",
				"name": "end",
				"subtype": null,
				"description": "ending location "
			},
			{
				"type": "list",
				"name": "options",
				"subtype": "instructions",
				"description": "can consists of any number of option flags and their parameters."
			}
		],
		"id": null,
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llCastRay",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llAllowInventoryDrop": {
		"description": "Allows for all users without modify permissions to add inventory items to a prim.",
		"parameters": [
			{
				"type": "integer",
				"name": "add",
				"subtype": "boolean",
				"description": ""
			}
		],
		"id": 176,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llAllowInventoryDrop",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llBreakAllLinks": {
		"description": "Delinks all prims in the link set.",
		"parameters": [],
		"id": 143,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llBreakAllLinks",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetSubString": {
		"returnType": "string",
		"returns": "that is the substring of src from start to end, leaving the original string intact.",
		"parameters": [
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "start",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "end",
				"subtype": null,
				"description": ""
			}
		],
		"id": 94,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetSubString",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llStopMoveToTarget": {
		"description": "Stops critically damped motion",
		"parameters": [],
		"id": 71,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llStopMoveToTarget",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetLocalRot": {
		"description": "Sets the rotation of a child prim relative to the root prim",
		"parameters": [
			{
				"type": "rotation",
				"name": "rot",
				"subtype": null,
				"description": ""
			}
		],
		"id": 284,
		"sleep": 0.2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetLocalRot",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetRot": {
		"description": "Sets the rotation of the prim to rot.",
		"parameters": [
			{
				"type": "rotation",
				"name": "rot",
				"subtype": null,
				"description": ""
			}
		],
		"id": 61,
		"sleep": 0.2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetRot",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llBreakLink": {
		"description": "Delinks the prim with the given link number in a linked object set",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": "Link number (0: unlinked, 1: root prim, >1: child prims and seated avatars) or a LINK_* flag "
			}
		],
		"id": 142,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llBreakLink",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llClearPrimMedia": {
		"returnType": "integer",
		"returns": "that is a STATUS_* flag which details the success/failure of the operation.",
		"description": "Clears (deletes) the media and all params from the given face.",
		"parameters": [
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number "
			}
		],
		"id": 352,
		"sleep": 1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llClearPrimMedia",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llCloud": {
		"returnType": "float",
		"returns": "that is the cloud density at the prim position + offset",
		"parameters": [
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": ""
			}
		],
		"id": 43,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llCloud",
		"deprecated": "none",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetSoundRadius": {
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": "in meters"
			},
			{
				"type": "float",
				"name": "radius",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetSoundRadius",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetMass": {
		"returnType": "float",
		"returns": "that is the mass of object (in lindograms) that script is attached to.",
		"parameters": [],
		"id": 109,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetMass",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llModPow": {
		"returnType": "integer",
		"returns": "that is a raised to the b power, mod c. ( (a**b)%c )",
		"parameters": [
			{
				"type": "integer",
				"name": "a",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "b",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "c",
				"subtype": null,
				"description": ""
			}
		],
		"id": 300,
		"sleep": 1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llModPow",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetCameraAtOffset": {
		"description": "Sets the point the camera is looking at to offset for avatars that sit on the object.",
		"parameters": [
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": ""
			}
		],
		"id": 244,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetCameraAtOffset",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llPassCollisions": {
		"description": "Sets the pass-collisions prim attribute.",
		"parameters": [
			{
				"type": "integer",
				"name": "pass",
				"subtype": "pass",
				"description": ""
			}
		],
		"id": 166,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llPassCollisions",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetListEntryType": {
		"returnType": "integer",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": ""
			}
		],
		"id": 194,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetListEntryType",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetVel": {
		"returnType": "vector",
		"returns": "that is the velocity of the object.",
		"parameters": [],
		"id": 77,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetVel",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llMakeExplosion": {
		"description": "Make a round explosion of particles",
		"parameters": [
			{
				"type": "integer",
				"name": "particles",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "scale",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "vel",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "lifetime",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "arc",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "texture",
				"subtype": null,
				"description": ""
			},
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": ""
			}
		],
		"id": 100,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llMakeExplosion",
		"deprecated": "llParticleSystem",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSay": {
		"description": "Says the text supplied in string msg on channel supplied in integer channel. The message can be heard 20m away, usually (see caveats)",
		"parameters": [
			{
				"type": "integer",
				"name": "channel",
				"subtype": "chat",
				"description": "input chat channel, any integer value "
			},
			{
				"type": "string",
				"name": "msg",
				"subtype": null,
				"description": ""
			}
		],
		"id": 23,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSay",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llStopPointAt": {
		"description": "Stop agent that owns object pointing",
		"parameters": [],
		"id": 132,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llStopPointAt",
		"deprecated": "none",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetPrimMediaParams": {
		"returnType": "integer",
		"returns": "that is a STATUS_* flag which details the success/failure of the operation(s).",
		"description": "Set the media params for a particular face. ",
		"parameters": [
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number "
			},
			{
				"type": "list",
				"name": "params",
				"subtype": "instructions",
				"description": "a set of name/value pairs (in no particular order)"
			}
		],
		"id": 350,
		"sleep": 1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetPrimMediaParams",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGenerateKey": {
		"returnType": "key",
		"description": "Generates a key using [http://en.wikipedia.org/wiki/UUID#Version_5_.28SHA-1_hash.29 Version 5 (SHA-1 hash)] UUID generation to create a unique key.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGenerateKey",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetDayOffset": {
		"returnType": "integer",
		"description": "Return the number of seconds added to the current time before calculating the current environmental time for the parcel.  llGetDayOffset  returns the value for the current parcel, llGetRegionDayOffset produces the same value for the entire region.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetDayOffset",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetDisplayName": {
		"returnType": "string",
		"returns": "that is the non-unique display name of the avatar specified by id.",
		"parameters": [
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": ""
			}
		],
		"id": 360,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetDisplayName",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llEuler2Rot": {
		"returnType": "rotation",
		"returns": "representation of the Euler Angles v.",
		"parameters": [
			{
				"type": "vector",
				"name": "v",
				"subtype": null,
				"description": "Angle"
			}
		],
		"id": 16,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llEuler2Rot",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetGeometricCenter": {
		"returnType": "vector",
		"parameters": [],
		"id": 278,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetGeometricCenter",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetFreeMemory": {
		"returnType": "integer",
		"parameters": [],
		"id": 225,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetFreeMemory",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetEnv": {
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetEnv",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetExperienceErrorMessage": {
		"returnType": "string",
		"returns": "describing the error code passed or the string corresponding to error. Returns XP_ERROR_UNKNOWN_ERROR if the error is not a valid error code.",
		"description": "Returns a text description of a particular Experience LSL error constant.",
		"parameters": [
			{
				"type": "integer",
				"name": "error",
				"subtype": "experience_error",
				"description": "The error code constant to translate."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetExperienceErrorMessage",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llGetAgentList": {
		"returnType": "list",
		"returns": "<nowiki>[</nowiki>key id0, key id1, ..., key idn] or <nowiki>[</nowiki>string error_msg] -  returns avatar keys for all agents in the region limited to the area(s) specified by scope",
		"description": "Requests a list of agents currently in the region, limited by the scope parameter.",
		"parameters": [
			{
				"type": "integer",
				"name": "scope",
				"subtype": null,
				"description": "<span></span>{{Collapsible_Table/Simple"
			},
			{
				"type": "list",
				"name": "options",
				"subtype": "instructions",
				"description": "Unused."
			}
		],
		"sleep": 0,
		"energy": 0,
		"wiki": "https://wiki.secondlife.com/wiki/llGetAgentList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetAccel": {
		"returnType": "vector",
		"returns": "that is the acceleration of the object in the region frame of reference.",
		"parameters": [],
		"id": 78,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetAccel",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetFreeURLs": {
		"returnType": "integer",
		"returns": "that is the number of available URLs. If attached, return the URLs remaining for the owner. Otherwise, return the available URLs for the region.",
		"parameters": [],
		"id": 344,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetFreeURLs",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetAgentLanguage": {
		"returnType": "string",
		"returns": "that is the language code of the preferred interface language of the user avatar. ",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			}
		],
		"id": 336,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetAgentLanguage",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llEscapeURL": {
		"returnType": "string",
		"returns": "that is the escaped/encoded version of url, replacing spaces with \"%20\" etc. The function will escape any character not in <nowiki>[a-zA-Z0-9]</nowiki> to \"%xx\" where \"xx\" is the Hexadecimal value of the character in UTF-8 Byte form.",
		"parameters": [
			{
				"type": "string",
				"name": "url",
				"subtype": null,
				"description": "A (preferably valid and unescaped URL) string."
			}
		],
		"id": 307,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llEscapeURL",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetOwnerKey": {
		"returnType": "key",
		"returns": "that is the owner of prim id",
		"parameters": [
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": "prim UUID that is in the same region "
			}
		],
		"id": 182,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetOwnerKey",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llEvade": {
		"description": "Characters will (roughly) try to hide from their pursuers if there is a good hiding spot along their fleeing path. Hiding means no direct line of sight from the head of the character (center of the top of its physics bounding box) to the head of its pursuer and no direct path between the two on the navmesh.",
		"parameters": [
			{
				"type": "key",
				"name": "target",
				"subtype": null,
				"description": "to evade"
			},
			{
				"type": "list",
				"name": "options",
				"subtype": "instructions",
				"description": "No options currently available"
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llEvade",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRequestInventoryData": {
		"returnType": "key",
		"description": "Requests data about the item name in the prim's inventory. When data is available the dataserver event will be raised.",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			}
		],
		"id": 156,
		"sleep": 1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRequestInventoryData",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetEnergy": {
		"returnType": "float",
		"returns": "that is how much energy is in the object as a percentage of maximum",
		"parameters": [],
		"id": 149,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetEnergy",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinksetDataListKeys": {
		"returnType": "list",
		"returns": "of the keys in the datastore, ordered alphabetically.",
		"description": "The llLinksetDataListKeys function returns a list of up to count keys in the datastore, starting at the one indicated by start. If count is less than 1, then all keys between start and the end are returned. If count minus start exceeds the total number of keys, the returned list will be shorter than count, down to a zero-length list if start equals or exceeds the total number of keys.",
		"parameters": [
			{
				"type": "integer",
				"name": "start",
				"subtype": null,
				"description": "The first key to return."
			},
			{
				"type": "integer",
				"name": "count",
				"subtype": null,
				"description": "The number of keys to return."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLinksetDataListKeys",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llFrand": {
		"returnType": "float",
		"returns": "that is pseudo random in the range 0.0",
		"parameters": [
			{
				"type": "float",
				"name": "mag",
				"subtype": null,
				"description": "Any valid float value"
			}
		],
		"id": 8,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llFrand",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llListenRemove": {
		"description": "Removes listen event callback handle",
		"parameters": [
			{
				"type": "integer",
				"name": "handle",
				"subtype": "handle",
				"description": ""
			}
		],
		"id": 27,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llListenRemove",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetSimStats": {
		"returnType": "float",
		"returns": "that is the requested statistic.",
		"parameters": [
			{
				"type": "integer",
				"name": "stat_type",
				"subtype": null,
				"description": "SIM_STAT_* flag"
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetSimStats",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llPreloadSound": {
		"description": "Preloads sound on viewers within range",
		"parameters": [
			{
				"type": "string",
				"name": "sound",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			}
		],
		"id": 93,
		"sleep": 1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llPreloadSound",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetAlpha": {
		"returnType": "float",
		"returns": "that is the Blinn-Phong alpha of face.",
		"parameters": [
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number or ALL_SIDES "
			}
		],
		"id": 50,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetAlpha",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llFleeFrom": {
		"description": "Directs a character to keep a specific distance from a specific position in the region or adjacent regions.",
		"parameters": [
			{
				"type": "vector",
				"name": "position",
				"subtype": null,
				"description": "from which to flee."
			},
			{
				"type": "float",
				"name": "distance",
				"subtype": null,
				"description": "Distance in meters to flee from position."
			},
			{
				"type": "list",
				"name": "options",
				"subtype": "instructions",
				"description": "No options available at this time."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llFleeFrom",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llOrd": {
		"returnType": "integer",
		"returns": "",
		"description": "Calculate the ordinal value for a character in a string.",
		"parameters": [
			{
				"type": "string",
				"name": "val",
				"subtype": null,
				"description": "Source string for character ordinal."
			},
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": "Index of character ordinal to retrieve."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llOrd",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetAgentSize": {
		"returnType": "vector",
		"returns": "that is an estimated size of the requested avatar.",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": ""
			}
		],
		"id": 218,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetAgentSize",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetOwner": {
		"returnType": "key",
		"returns": "that is the object owner's UUID.",
		"parameters": [],
		"id": 117,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetOwner",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetEnvironment": {
		"returnType": "list",
		"returns": "containing the current environment values for the parcel or region as a list of attributes. Takes a list of attributes to retrieve in params and returns them in the order requested.",
		"parameters": [
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": "A position in region coordinates. X and Y are in region coordinates and determine the parcel. If X and Y are both -1, the environment for the region is inspected. Z is the altitude in the region and determines which sky track is accessed."
			},
			{
				"type": "list",
				"name": "params",
				"subtype": null,
				"description": "A list of parameters to retrieve from the current environment."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetEnvironment",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRemoveVehicleFlags": {
		"description": "Disable the specified vehicle flags",
		"parameters": [
			{
				"type": "integer",
				"name": "flags",
				"subtype": "vehicle_flag",
				"description": "mask of VEHICLE_FLAG_* flags"
			}
		],
		"id": 237,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRemoveVehicleFlags",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetPermissions": {
		"returnType": "integer",
		"returns": "bitfield with the script permissions granted",
		"parameters": [],
		"id": 138,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetPermissions",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetPrimMediaParams": {
		"returnType": "list",
		"returns": "of values in the order requested.",
		"description": "Get the media params for a particular face on an object, given the desired list of names.",
		"parameters": [
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number "
			},
			{
				"type": "list",
				"name": "params",
				"subtype": "instructions",
				"description": "a set of name (in no particular order)"
			}
		],
		"id": 351,
		"sleep": 1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetPrimMediaParams",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetHealth": {
		"returnType": "float",
		"description": "Returns the current health of an avatar.",
		"parameters": [
			{
				"type": "key",
				"name": "agent_id",
				"subtype": "handle",
				"description": "The ID of an agent in the region."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetHealth",
		"experimental": true,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llList2Vector": {
		"returnType": "vector",
		"returns": "that is at index in src.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": ""
			}
		],
		"id": 190,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llList2Vector",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetDayLength": {
		"returnType": "integer",
		"description": "Return the number of seconds in the day cycle applied to the current parcel. llGetDayLength returns the number of seconds for the current parcel, llGetRegionDayLength is the number of seconds in the day cycle applied to the entire region.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetDayLength",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinksetDataCountFound": {
		"returnType": "integer",
		"returns": "Count of the keys in the datastore that match the supplied pattern.",
		"description": "The llLinksetDataCountFound function returns the number of keys in the linkset datastore that match the pattern supplied in the pattern.",
		"parameters": [
			{
				"type": "string",
				"name": "pattern",
				"subtype": null,
				"description": "A regular expression describing which keys to return."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLinksetDataCountFound",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRot": {
		"returnType": "rotation",
		"returns": "that is the prim's rotation relative to the region's axes.",
		"parameters": [],
		"id": 62,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRot",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llExecCharacterCmd": {
		"description": "Send a command to the pathing system.",
		"parameters": [
			{
				"type": "integer",
				"name": "command",
				"subtype": null,
				"description": "Command to be sent."
			},
			{
				"type": "list",
				"name": "options",
				"subtype": "instructions",
				"description": "CHARACTER_CMD_*"
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llExecCharacterCmd",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetExperienceDetails": {
		"returnType": "list",
		"returns": "of details about the experience. This list has 6 components: [string experience_name, key owner_id, key experience_id, integer state, string state_message, key group_id]",
		"parameters": [
			{
				"type": "key",
				"name": "experience_id",
				"subtype": null,
				"description": "The ID of the experience to query. "
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetExperienceDetails",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llGetInventoryAcquireTime": {
		"returnType": "string",
		"returns": "with the timestamp that the item was added to the prim's inventory.The time is in the UTC time zone in the format \"YYYY-MM-DDThh:mm:ssZ\"Appears to be accurate to seconds.",
		"parameters": [
			{
				"type": "string",
				"name": "item",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetInventoryAcquireTime",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetScriptState": {
		"returnType": "integer",
		"returns": "that is TRUE if the script is running.",
		"parameters": [
			{
				"type": "string",
				"name": "script",
				"subtype": null,
				"description": ""
			}
		],
		"id": 250,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetScriptState",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llListStatistics": {
		"returnType": "float",
		"returns": "that is the result of performing statistical aggregate function operation on src.",
		"parameters": [
			{
				"type": "integer",
				"name": "operation",
				"subtype": null,
				"description": "a LIST_STAT_* flag"
			},
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			}
		],
		"id": 315,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llListStatistics",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedVel": {
		"returnType": "vector",
		"parameters": [
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 36,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedVel",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llList2String": {
		"returnType": "string",
		"returns": "that is at index in src.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": ""
			}
		],
		"id": 188,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llList2String",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRegionCorner": {
		"returnType": "vector",
		"returns": "in meters that is the global location of the south-west corner of the region the object is in. The z component is 0.0",
		"parameters": [],
		"id": 199,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRegionCorner",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llListen": {
		"returnType": "integer",
		"returns": "that can be used to deactivate or remove the listen.",
		"description": "Sets a handle for msg on channel from name and id.",
		"parameters": [
			{
				"type": "integer",
				"name": "channel",
				"subtype": "chat",
				"description": "(-2147483648 through 2147483647)"
			},
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": "filter for specific prim name or avatar legacy name"
			},
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": "group, avatar, or prim UUID that is in the same region "
			},
			{
				"type": "string",
				"name": "msg",
				"subtype": null,
				"description": ""
			}
		],
		"id": 25,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llListen",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetStaticPath": {
		"returnType": "list",
		"returns": "of position vectors indicating pathfinding waypoints between positions at start and end, for a character of a given radius. The waypoints this function returns are for the 'static' nav mesh, meaning that objects set to \"movable obstacle\" or \"movable phantom\" are ignored.This function can be used from attachments and other non-character objects. It can also be used in any region, even if dynamic pathfinding is disabled.",
		"parameters": [
			{
				"type": "vector",
				"name": "start",
				"subtype": null,
				"description": "Starting position"
			},
			{
				"type": "vector",
				"name": "end",
				"subtype": null,
				"description": "End position"
			},
			{
				"type": "float",
				"name": "radius",
				"subtype": null,
				"description": "Radius of the character that we're creating a path for, between 0.125m and 5.0m"
			},
			{
				"type": "list",
				"name": "params",
				"subtype": null,
				"description": "Only takes the parameter CHARACTER_TYPE; the options are identical to those used for llCreateCharacter. The default value is CHARACTER_TYPE_NONE"
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetStaticPath",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetHTTPHeader": {
		"returnType": "string",
		"returns": "that is the value for header for request_id.",
		"parameters": [
			{
				"type": "key",
				"name": "request_id",
				"subtype": "handle",
				"description": "A valid HTTP request key."
			},
			{
				"type": "string",
				"name": "header",
				"subtype": null,
				"description": "Lower case header value name."
			}
		],
		"id": 349,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetHTTPHeader",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llEmail": {
		"description": "Sends an email to address with subject and message.",
		"parameters": [
			{
				"type": "string",
				"name": "address",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "subject",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "message",
				"subtype": null,
				"description": ""
			}
		],
		"id": 119,
		"sleep": 20,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llEmail",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetParcelMaxPrims": {
		"returnType": "integer",
		"returns": "that is the maximum combined [http://community.secondlife.com/t5/English-Knowledge-Base/Calculating-land-impact/ta-p/974163 land impact] allowed for objects on the parcel at pos.",
		"parameters": [
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": "position in region coordinates "
			},
			{
				"type": "integer",
				"name": "sim_wide",
				"subtype": "boolean",
				"description": ""
			}
		],
		"id": 326,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetParcelMaxPrims",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetPermissionsKey": {
		"returnType": "key",
		"parameters": [],
		"id": 137,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetPermissionsKey",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llMakeFountain": {
		"description": "Make a fountain of particles",
		"parameters": [
			{
				"type": "integer",
				"name": "particles",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "scale",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "vel",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "lifetime",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "arc",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "bounce",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "texture",
				"subtype": null,
				"description": ""
			},
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "bounce_offset",
				"subtype": null,
				"description": ""
			}
		],
		"id": 101,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llMakeFountain",
		"deprecated": "llParticleSystem",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetMinScaleFactor": {
		"returnType": "float",
		"returns": "that is the smallest scaling factor that can be used with llScaleByFactor to resize the object.  This minimum is determined by the prim scale limits.",
		"parameters": [],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetMinScaleFactor",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llShout": {
		"description": "Shouts the text supplied in string msg on channel supplied in integer channel.",
		"parameters": [
			{
				"type": "integer",
				"name": "channel",
				"subtype": "chat",
				"description": "input chat channel, any integer value "
			},
			{
				"type": "string",
				"name": "msg",
				"subtype": null,
				"description": ""
			}
		],
		"id": 24,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llShout",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLookAt": {
		"description": "Cause object to point its up axis (positive z) towards target, while keeping its forward axis (positive x) below the horizon.Continues to track target until llStopLookAt is called.",
		"parameters": [
			{
				"type": "vector",
				"name": "target",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "strength",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "damping",
				"subtype": null,
				"description": ""
			}
		],
		"id": 105,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLookAt",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llScaleByFactor": {
		"returnType": "integer",
		"returns": "TRUE if it succeeds, FALSE if it fails.",
		"description": "Attempts to resize the entire object by scaling_factor, maintaining the size-position ratios of the prims.Resizing is subject to prim scale limits and linkability limits. This function can not resize the object if the linkset is physical, a pathfinding character, in a keyframed motion, or if resizing would cause the parcel to overflow.",
		"parameters": [
			{
				"type": "float",
				"name": "scaling_factor",
				"subtype": null,
				"description": "The multiplier to be used with the prim sizes and their local positions."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llScaleByFactor",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llList2Rot": {
		"returnType": "rotation",
		"returns": "that is at index in src.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": ""
			}
		],
		"id": 191,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llList2Rot",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedType": {
		"returnType": "integer",
		"returns": "mask that is the types of detected object or avatar.",
		"parameters": [
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 34,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedType",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLog10": {
		"returnType": "float",
		"returns": "that is the base 10 logarithm of val.<br/>If val <= 0 return zero instead.",
		"parameters": [
			{
				"type": "float",
				"name": "val",
				"subtype": null,
				"description": ""
			}
		],
		"id": 264,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLog10",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetMassMKS": {
		"returnType": "float",
		"returns": "that is the mass (in Kilograms) of object that script is attached to. Functionally identical to llGetMass except for the unit used in the return value.",
		"parameters": [],
		"id": null,
		"sleep": 0,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetMassMKS",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llManageEstateAccess": {
		"returnType": "integer",
		"returns": "TRUE if the call was successful; FALSE if throttled, invalid action, invalid or null id or object owner is not allowed to manage the estate. ",
		"description": "Use to add or remove agents from the estate's agent access or ban lists or groups from the estate's group access list.",
		"parameters": [
			{
				"type": "integer",
				"name": "action",
				"subtype": null,
				"description": "ESTATE_ACCESS_* flag"
			},
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llManageEstateAccess",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llPow": {
		"returnType": "float",
		"returns": "that is base raised to the power exponent (base<sup>exponent</sup>)",
		"parameters": [
			{
				"type": "float",
				"name": "base",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "exponent",
				"subtype": null,
				"description": ""
			}
		],
		"id": 5,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llPow",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDialog": {
		"description": "Shows a dialog box in the lower right corner of the avatar's screen (upper right in Viewer 1.x) with a message and choice buttons, as well as an ignore button. This has many uses ranging from simple message delivery to complex menu systems.",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			},
			{
				"type": "string",
				"name": "message",
				"subtype": null,
				"description": ""
			},
			{
				"type": "list",
				"name": "buttons",
				"subtype": null,
				"description": "button labels"
			},
			{
				"type": "integer",
				"name": "channel",
				"subtype": null,
				"description": "input chat channel, any integer value "
			}
		],
		"id": 247,
		"sleep": 1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDialog",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetAgentInfo": {
		"returnType": "integer",
		"returns": "containing the agent information about id.",
		"parameters": [
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": ""
			}
		],
		"id": 206,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetAgentInfo",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSensorRepeat": {
		"description": "Performs a scan for name and id with type within range meters and arc radians of forward vector and repeats every rate seconds. The first scan is not performed until rate seconds have passed.Script execution continues immediately. Whenever a scan is completed, a sensor or no_sensor event is put in the event queue.",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": "Object or avatar name"
			},
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": "group, avatar, or prim UUID that is in the same region "
			},
			{
				"type": "integer",
				"name": "type",
				"subtype": null,
				"description": "mask (AGENT_BY_LEGACY_NAME, AGENT_BY_USERNAME, ACTIVE, PASSIVE, and/or SCRIPTED)"
			},
			{
				"type": "float",
				"name": "radius",
				"subtype": null,
				"description": "distance in meters from center, 0.0 <= radius <= 96.0"
			},
			{
				"type": "float",
				"name": "arc",
				"subtype": null,
				"description": "the max angle between the object's local X-axis and detectable objects, 0.0 <= arc <= PI"
			},
			{
				"type": "float",
				"name": "rate",
				"subtype": null,
				"description": "how often a scan is performed"
			}
		],
		"id": 29,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSensorRepeat",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSitTarget": {
		"description": "Set the sit location for the prim. The sit location is relative to the prim's position and rotation.",
		"parameters": [
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": "Additional position for the sit target in local prim coordinates."
			},
			{
				"type": "rotation",
				"name": "rot",
				"subtype": null,
				"description": "Additional rotation for the sit target relative to the prim rotation."
			}
		],
		"id": 238,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSitTarget",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetRemoteScriptAccessPin": {
		"description": "Allows a prim to have scripts remotely loaded via llRemoteLoadScriptPin when it is passed the correct pin and the prim is set mod.",
		"parameters": [
			{
				"type": "integer",
				"name": "pin",
				"subtype": null,
				"description": "zero disables (ie llRemoteLoadScriptPin will fail), non-zero enables."
			}
		],
		"id": 252,
		"sleep": 0.2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetRemoteScriptAccessPin",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLoopSound": {
		"description": "Plays attached sound looping indefinitely at volume",
		"parameters": [
			{
				"type": "string",
				"name": "sound",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "float",
				"name": "volume",
				"subtype": null,
				"description": ""
			}
		],
		"id": 87,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLoopSound",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llMakeSmoke": {
		"description": "Make smoke like particles",
		"parameters": [
			{
				"type": "integer",
				"name": "particles",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "scale",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "vel",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "lifetime",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "arc",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "texture",
				"subtype": null,
				"description": ""
			},
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": ""
			}
		],
		"id": 102,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llMakeSmoke",
		"deprecated": "llParticleSystem",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetNumberOfSides": {
		"returnType": "integer",
		"returns": "that is the number of faces (or sides) of the prim.",
		"parameters": [],
		"id": 168,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetNumberOfSides",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llsRGB2Linear": {
		"returnType": "vector",
		"returns": "Transforms a color specified in the sRGB colorspace to the linear RGB colorspace.",
		"parameters": [
			{
				"type": "vector",
				"name": "srgb",
				"subtype": null,
				"description": "Color in the sRGB color space."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llsRGB2Linear",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetPrimitiveParams": {
		"returnType": "list",
		"parameters": [
			{
				"type": "list",
				"name": "params",
				"subtype": "instructions",
				"description": "PRIM_* flags"
			}
		],
		"id": 279,
		"sleep": 0.2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetPrimitiveParams",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetParcelPrimOwners": {
		"returnType": "list",
		"returns": "of all residents and groups who own objects on the parcel at pos and with individual [http://community.secondlife.com/t5/English-Knowledge-Base/Calculating-land-impact/ta-p/974163 land impact] used. <br/>The list is formatted as [ key ownerKey1, integer agentImpact1, key ownerKey2, integer agentImpact2, ... ], and sorted by agent/group key with a maximum of 100 strides.",
		"parameters": [
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": ""
			}
		],
		"id": 324,
		"sleep": 2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetParcelPrimOwners",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llScaleTexture": {
		"description": "Sets the texture u & v scales for the chosen face.",
		"parameters": [
			{
				"type": "float",
				"name": "u",
				"subtype": null,
				"description": "horizontal (x) scale in the interval -100.0 <= u <= 100.0"
			},
			{
				"type": "float",
				"name": "v",
				"subtype": null,
				"description": "vertical (y) scale in the interval -100.0 <= v <= 100.0"
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number or ALL_SIDES "
			}
		],
		"id": 54,
		"sleep": 0.2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llScaleTexture",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llStartObjectAnimation": {
		"description": "Start animation for the current object.",
		"parameters": [
			{
				"type": "string",
				"name": "anim",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			}
		],
		"id": 504,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llStartObjectAnimation",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetObjectAnimationNames": {
		"returnType": "list",
		"returns": "of names of animations playing in the current object",
		"parameters": [],
		"id": 506,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetObjectAnimationNames",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetAlpha": {
		"description": "Sets the Blinn-Phong alpha on face",
		"parameters": [
			{
				"type": "float",
				"name": "alpha",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number or ALL_SIDES "
			}
		],
		"id": 51,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetAlpha",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llStringLength": {
		"returnType": "integer",
		"returns": "that is the number of characters in str.",
		"parameters": [
			{
				"type": "string",
				"name": "str",
				"subtype": null,
				"description": ""
			}
		],
		"id": 128,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llStringLength",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llStringTrim": {
		"returnType": "string",
		"returns": "that is src with leading and/or trailing white space (spaces, tabs, and line feeds) trimmed from it.",
		"parameters": [
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "type",
				"subtype": null,
				"description": "STRING_TRIM* flag(s)"
			}
		],
		"id": 330,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llStringTrim",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llResetLandPassList": {
		"description": "Removes all residents from the land access/pass list.",
		"parameters": [],
		"id": 322,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llResetLandPassList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGroundContour": {
		"returnType": "vector",
		"returns": "that is the ground contour direction below the prim position + offset. The contour is the direction of a contour line at that point, that is the direction in which there is no change in elevation.",
		"parameters": [
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": ""
			}
		],
		"id": 223,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGroundContour",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetLinkName": {
		"returnType": "string",
		"returns": "that is the name of link in link set",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": "Link number (0: unlinked, 1: root prim, >1: child prims and seated avatars) or a LINK_* flag "
			}
		],
		"id": 145,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetLinkName",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetMemoryLimit": {
		"returnType": "integer",
		"description": "Get the maximum memory a script can use. ",
		"parameters": [],
		"id": null,
		"sleep": 0,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetMemoryLimit",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llResetAnimationOverride": {
		"description": "Resets the animation override of the specified animation state (anim_state) to the corresponding default value.",
		"parameters": [
			{
				"type": "string",
				"name": "anim_state",
				"subtype": null,
				"description": "animation state to be reset"
			}
		],
		"id": null,
		"sleep": 0,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llResetAnimationOverride",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llJson2List": {
		"returnType": "list",
		"returns": "made by parsing src, a string representing json.",
		"description": "This function takes a string representing JSON, and returns a list of the top level.",
		"parameters": [
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llJson2List",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetLinkNumber": {
		"returnType": "integer",
		"returns": "that is the link number of the prim containing the script.",
		"parameters": [],
		"id": 139,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetLinkNumber",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRotTarget": {
		"returnType": "integer",
		"returns": "to unregister the target with llRotTargetRemove",
		"description": "This function is to have the script know when it has reached a rotation.<br/>It registers a rot with a error that triggers at_rot_target and not_at_rot_target events continuously until unregistered.",
		"parameters": [
			{
				"type": "rotation",
				"name": "rot",
				"subtype": null,
				"description": "target rotation"
			},
			{
				"type": "float",
				"name": "error",
				"subtype": null,
				"description": "angle in radians, defines when rot has been reached"
			}
		],
		"id": 68,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRotTarget",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetVehicleVectorParam": {
		"description": "Sets the vehicle vector parameter param to vec.",
		"parameters": [
			{
				"type": "integer",
				"name": "param",
				"subtype": "vehicle_vector",
				"description": "VEHICLE_* flag"
			},
			{
				"type": "vector",
				"name": "vec",
				"subtype": null,
				"description": ""
			}
		],
		"id": 234,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetVehicleVectorParam",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSensorRemove": {
		"description": "Removes the sensor setup by llSensorRepeat.",
		"parameters": [],
		"id": 30,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSensorRemove",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDie": {
		"description": "Deletes the object. The object does not go to the owners Inventory:Trash.",
		"parameters": [],
		"id": 41,
		"sleep": 0,
		"energy": 0,
		"wiki": "https://wiki.secondlife.com/wiki/llDie",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llHTTPResponse": {
		"description": "Responds to request_id with status and body.",
		"parameters": [
			{
				"type": "key",
				"name": "request_id",
				"subtype": "handle",
				"description": "A valid HTTP request key."
			},
			{
				"type": "integer",
				"name": "status",
				"subtype": null,
				"description": "List_of_HTTP_status_codes (200, 400, 404, etc)"
			},
			{
				"type": "string",
				"name": "body",
				"subtype": null,
				"description": "Contents of the response."
			}
		],
		"id": 348,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llHTTPResponse",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetNotecardLine": {
		"returnType": "key",
		"description": "Requests the line line of the notecard name from the dataserver.",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "line",
				"subtype": null,
				"description": "Line number in a notecard (the index starts at zero)."
			}
		],
		"id": 217,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetNotecardLine",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetObjectDetails": {
		"returnType": "list",
		"returns": "of the details for id, specifically those requested in params. ",
		"parameters": [
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": "group, avatar, or prim UUID that is in the same region "
			},
			{
				"type": "list",
				"name": "params",
				"subtype": null,
				"description": "OBJECT_* flags"
			}
		],
		"id": 332,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetObjectDetails",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetScale": {
		"returnType": "vector",
		"returns": "that is the scale of the prim.",
		"parameters": [],
		"id": 48,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetScale",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinksetDataReadProtected": {
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llLinksetDataReadProtected",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetSimulatorHostname": {
		"returnType": "string",
		"returns": "that is the hostname of the machine the script is running on (same as string in viewer Help dialog)",
		"parameters": [],
		"id": 283,
		"sleep": 10,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetSimulatorHostname",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRefreshPrimURL": {
		"description": "Reloads the web page shown on the sides of the object.",
		"parameters": [],
		"id": 306,
		"sleep": 20,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRefreshPrimURL",
		"deprecated": "none",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinkPlaySound": {
		"description": "Plays attached sound once at volume",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": ""
			},
			{
				"type": "string",
				"name": "sound",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "float",
				"name": "volume",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "flags",
				"subtype": null,
				"description": "Bit flags used to control how the sound is played."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLinkPlaySound",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSin": {
		"returnType": "float",
		"returns": "that is the sine of theta.",
		"parameters": [
			{
				"type": "float",
				"name": "theta",
				"subtype": null,
				"description": ""
			}
		],
		"id": 0,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSin",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRootPosition": {
		"returnType": "vector",
		"returns": "that is the region position of the root object of the object script is attached to",
		"parameters": [],
		"id": 268,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRootPosition",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinkSetSoundQueueing": {
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llLinkSetSoundQueueing",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinksetDataFindKeys": {
		"returnType": "list",
		"returns": "of the keys in the datastore.",
		"description": "The llLinksetDataFindKeys function returns a list of up to count keys from the datastore that match pattern, starting at the one indicated by start. If count is less than 1, then all keys between start and the end which match pattern are returned. If count minus start exceeds the number of matching keys, the returned list will be shorter than count, down to a zero-length list if start equals or exceeds the number of matching keys. The list is ordered alphabetically.",
		"parameters": [
			{
				"type": "string",
				"name": "pattern",
				"subtype": null,
				"description": "A regular expression describing which keys to return."
			},
			{
				"type": "integer",
				"name": "start",
				"subtype": null,
				"description": "The first key to return."
			},
			{
				"type": "integer",
				"name": "count",
				"subtype": null,
				"description": "The number of keys to return."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLinksetDataFindKeys",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinksetDataCountKeys": {
		"returnType": "integer",
		"returns": "number of keys used in the linkset store.",
		"description": "The llLinksetDataCountKeys returns the number of unique keys that have been stored in the linkset's datastore.",
		"parameters": [],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLinksetDataCountKeys",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetSPMaxMemory": {
		"returnType": "integer",
		"parameters": [],
		"id": null,
		"sleep": 0,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetSPMaxMemory",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetForce": {
		"returnType": "vector",
		"returns": "that is the force (if the script is physical)",
		"parameters": [],
		"id": 65,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetForce",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llFabs": {
		"returnType": "float",
		"returns": "that is the positive version of val.",
		"parameters": [
			{
				"type": "float",
				"name": "val",
				"subtype": null,
				"description": "Any valid float value"
			}
		],
		"id": 7,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llFabs",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinksetDataDelete": {
		"returnType": "integer",
		"returns": "success or failure code.",
		"description": "The llLinksetDataDeleteProtected function erases a protected name:value pair from the linkset's datastore. ",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": "The key of the linkset name:value pair to be deleted."
			},
			{
				"type": "string",
				"name": "pass",
				"subtype": null,
				"description": "A pass phrase previously used to protect the name:value pair."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLinksetDataDelete",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetGMTclock": {
		"returnType": "float",
		"returns": "that is the time in seconds since midnight GMT.  Value appears to be truncated to the second.",
		"parameters": [],
		"id": 282,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetGMTclock",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinksetDataRead": {
		"returnType": "string",
		"returns": "value corresponding to name",
		"description": "Reads a protected name:value pair from the datastore.",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": "The key of the name:value pair to be read."
			},
			{
				"type": "string",
				"name": "pass",
				"subtype": null,
				"description": "The pass phrase protecting the name:value pair."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLinksetDataRead",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRootRotation": {
		"returnType": "rotation",
		"returns": "that is the region rotation of the root prim of the object.",
		"parameters": [],
		"id": 269,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRootRotation",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRegionFPS": {
		"returnType": "float",
		"returns": "that is the mean region frames per second.",
		"parameters": [],
		"id": 228,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRegionFPS",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llIsFriend": {
		"returnType": "integer",
		"returns": "that is TRUE if agent_id and the owner of the prim the script is in are friends, otherwise FALSE.",
		"description": "",
		"parameters": [
			{
				"type": "key",
				"name": "agent_id",
				"subtype": null,
				"description": ""
			}
		],
		"id": 0,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llIsFriend",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetPos": {
		"returnType": "vector",
		"returns": "that is the position of the task in region coordinates",
		"parameters": [],
		"id": 59,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetPos",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRegionDayLength": {
		"returnType": "integer",
		"description": "Return the number of seconds in the day cycle applied to the current region. llGetDayLength returns the number of seconds for the current parcel, llGetRegionDayLength is the number of seconds in the day cycle applied to the entire region.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRegionDayLength",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinkStopSound": {
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llLinkStopSound",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llUnSit": {
		"description": "The agent identified by id is forced to stand up if any of the following apply:# The agent is sitting on the scripted object# The agent is over land owned by the scripted object's owner and/or a group the owner has land rights for.",
		"parameters": [
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			}
		],
		"id": 220,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llUnSit",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llListenControl": {
		"description": "Makes listen event callback handle active or inactive",
		"parameters": [
			{
				"type": "integer",
				"name": "handle",
				"subtype": "handle",
				"description": ""
			},
			{
				"type": "integer",
				"name": "active",
				"subtype": "boolean",
				"description": "boolean, if TRUE activates, if FALSE deactivates "
			}
		],
		"id": 26,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llListenControl",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinksetDataAvailable": {
		"returnType": "integer",
		"returns": "number of bytes available in the linkset store.",
		"description": "The llLinksetDataAvailable returns the number of bytes available in the linkset's datastore.",
		"parameters": [],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLinksetDataAvailable",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetParcelDetails": {
		"returnType": "list",
		"returns": "that is the parcel details specified in params (in the same order) for the parcel at pos.",
		"parameters": [
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": "only x and y are important and to be given in region coordinates"
			},
			{
				"type": "list",
				"name": "params",
				"subtype": null,
				"description": "a list of PARCEL_DETAILS_* flags."
			}
		],
		"id": 327,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetParcelDetails",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetParcelFlags": {
		"returnType": "integer",
		"returns": "of parcel flags (PARCEL_FLAG_*) for the parcel that includes the point pos.",
		"parameters": [
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": ""
			}
		],
		"id": 317,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetParcelFlags",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinear2sRGB": {
		"returnType": "vector",
		"returns": "Transforms a color specified in linear RGB colorspace into the sRGB colorspace.",
		"parameters": [
			{
				"type": "vector",
				"name": "color",
				"subtype": null,
				"description": "Color in the linear color space."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llLinear2sRGB",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llJsonSetValue": {
		"returnType": "string",
		"returns": "",
		"description": "Returns, if successful, a new JSON text string which is json with the value indicated by the specifiers list set to value.If unsuccessful (usually because of specifying an out of bounds array index) it returns JSON_INVALID.An \"out of bounds array index\" is defined to be any Integer specifiers greater than the length of an existing array at that level within the Json text or greater than 0 (zero) at a level an array doesn't exist.A special specifiers, JSON_APPEND, is accepted which appends the value to the end of the array at the specifiers level. Care should be taken- if that level is not an array, the existing Value there will be overwritten and replaced with an array containing value at it's first (0) index.Contrary to lists and strings, negative indexing of Json arrays is not supported.If an existing \"Key\" is specifiers at that level, its Value will be overwritten by value unless value is the magic value JSON_DELETE. If a value does not exist at specifiers, a new Key:Value pair will be formed within the Json object. To delete an existing value at specifiers, use JSON_DELETE as the value. Note it will not prune empty objects or arrays at higher levels.If value is JSON_TRUE, JSON_FALSE or JSON_NULL, the Value set will be the bare words 'true', 'false' or 'null', respectively, at the specifiers location within json.",
		"parameters": [
			{
				"type": "string",
				"name": "json",
				"subtype": null,
				"description": "source JSON data"
			},
			{
				"type": "list",
				"name": "specifiers",
				"subtype": null,
				"description": "location of the of the value to be added, updated or deleted."
			},
			{
				"type": "string",
				"name": "value",
				"subtype": null,
				"description": "new value or JSON_DELETE flag."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llJsonSetValue",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llWorldPosToHUD": {
		"returnType": "vector",
		"returns": "position in HUD frame that would place the center of the HUD object directly over world_pos as viewed by the current camera.",
		"parameters": [
			{
				"type": "vector",
				"name": "world_pos",
				"subtype": null,
				"description": ""
			}
		],
		"id": 547,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llWorldPosToHUD",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llNavigateTo": {
		"description": "Directs an object to travel to a defined position in the region or adjacent regions.",
		"parameters": [
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": "for the character to navigate to."
			},
			{
				"type": "list",
				"name": "options",
				"subtype": "instructions",
				"description": "List of parameters to control the type of pathfinding used."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llNavigateTo",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRegionDayOffset": {
		"returnType": "integer",
		"description": "Return the number of seconds added to the current time before calculating the current environmental time for the region.  llGetDayOffset  returns the value for the current parcel, llGetRegionDayOffset produces the same value for the entire region.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRegionDayOffset",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetOmega": {
		"returnType": "vector",
		"returns": "that is the rotation velocity of the object in radians per second.",
		"parameters": [],
		"id": 79,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetOmega",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llVerifyRSA": {
		"returnType": "integer",
		"returns": "indicating whether the RSA_(cryptosystem) signature is valid for msg when using hash algorithm algorithm and public RSA key public_key.  Returns TRUE if the signature is verified, and FALSE otherwise.  Can be paired with llSignRSA to validate the authenticity of messages from other LSL scripts.",
		"parameters": [
			{
				"type": "string",
				"name": "public_key",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "msg",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "signature",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "algorithm",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llVerifyRSA",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llTargetedEmail": {
		"description": "Sends an email to the owner (selected by target) of an object with subject and message.",
		"parameters": [
			{
				"type": "integer",
				"name": "target",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "subject",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "message",
				"subtype": null,
				"description": ""
			}
		],
		"id": 119,
		"sleep": 20,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llTargetedEmail",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinksetDataDeleteFound": {
		"returnType": "list",
		"returns": "of the number of keys deleted or skipped.",
		"description": "The llLinksetDataDeleteFound function finds and attempts to delete all keys in the data store that match pattern. This function will delete protected key-value pairs only if the matching pass phrase is passed in the pass parameter. The function returns a list, the first entry in the list is the number of keys deleted, the second entry in the list is the number of keys that could not be deleted due to a non-matching pass phrase. If this function successfully deletes any keys from the datastore it will trigger a linkset_data event with the type of LINKSET_DATA_MULTIDELETE, the key name will consist of a comma separated list of the key names removed from the datastore.",
		"parameters": [
			{
				"type": "string",
				"name": "pattern",
				"subtype": null,
				"description": "A regular expression describing which keys to delete."
			},
			{
				"type": "string",
				"name": "pass",
				"subtype": null,
				"description": "Optional pass phrase to delete protected keys."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLinksetDataDeleteFound",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llTargetRemove": {
		"description": "Removes positional target handle registered with llTarget",
		"parameters": [
			{
				"type": "integer",
				"name": "handle",
				"subtype": "handle",
				"description": ""
			}
		],
		"id": 67,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llTargetRemove",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llListFindStrided": {
		"returnType": "integer",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": "what to search in (haystack)"
			},
			{
				"type": "list",
				"name": "test",
				"subtype": null,
				"description": "what to search for (needle)"
			},
			{
				"type": "integer",
				"name": "start",
				"subtype": null,
				"description": "Start of range to search"
			},
			{
				"type": "integer",
				"name": "end",
				"subtype": null,
				"description": "End of range to search"
			},
			{
				"type": "integer",
				"name": "stride",
				"subtype": null,
				"description": "Number of entries per stride within src"
			}
		],
		"id": 201,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llListFindStrided",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSHA256String": {
		"returnType": "string",
		"returns": "of 64 hex characters that is the SHA-2 security hash of src.",
		"parameters": [
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSHA256String",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetParcelMusicURL": {
		"returnType": "string",
		"returns": "containing the parcel streaming audio URL.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetParcelMusicURL",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llListReplaceList": {
		"returnType": "list",
		"returns": "that is a copy of dest with start through end removed and src inserted at start.",
		"parameters": [
			{
				"type": "list",
				"name": "dest",
				"subtype": null,
				"description": "destination"
			},
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": "source"
			},
			{
				"type": "integer",
				"name": "start",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "end",
				"subtype": null,
				"description": ""
			}
		],
		"id": 296,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llListReplaceList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llMoveToTarget": {
		"description": "Critically damp to target in tau seconds (if the script is physical)",
		"parameters": [
			{
				"type": "vector",
				"name": "target",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "tau",
				"subtype": null,
				"description": ""
			}
		],
		"id": 70,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llMoveToTarget",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llPushObject": {
		"description": "Applies impulse and ang_impulse to object target",
		"parameters": [
			{
				"type": "key",
				"name": "target",
				"subtype": null,
				"description": "group, avatar, or prim UUID that is in the same region "
			},
			{
				"type": "vector",
				"name": "impulse",
				"subtype": null,
				"description": "Direction and force of push. Direction is affected by local."
			},
			{
				"type": "vector",
				"name": "ang_impulse",
				"subtype": null,
				"description": "Rotational force."
			},
			{
				"type": "integer",
				"name": "local",
				"subtype": null,
				"description": "boolean, if TRUE uses the local axis of target, if FALSE uses the region axis."
			}
		],
		"id": 165,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llPushObject",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llPlaySoundSlave": {
		"description": "Plays attached sound once at volume, synced to next loop of most audible sync master declared by llLoopSoundMaster.",
		"parameters": [
			{
				"type": "string",
				"name": "sound",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "float",
				"name": "volume",
				"subtype": null,
				"description": ""
			}
		],
		"id": 90,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llPlaySoundSlave",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llPatrolPoints": {
		"description": "Sets the object patrolling between the points specified in patrolPoints.",
		"parameters": [
			{
				"type": "list",
				"name": "patrolPoints",
				"subtype": null,
				"description": "A list of vectors for the character to travel through sequentially.  The list must contain at least two entries."
			},
			{
				"type": "list",
				"name": "options",
				"subtype": "instructions",
				"description": "PATROL_* flags and their parameters"
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llPatrolPoints",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llOverMyLand": {
		"returnType": "integer",
		"returns": "boolean, TRUE if id is over land owned by the script owner, FALSE otherwise.",
		"parameters": [
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": ""
			}
		],
		"id": 215,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llOverMyLand",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llVecNorm": {
		"returnType": "vector",
		"parameters": [
			{
				"type": "vector",
				"name": "vec",
				"subtype": null,
				"description": "Any valid vector"
			}
		],
		"id": 13,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llVecNorm",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLoadURL": {
		"description": "Shows dialog to avatar offering to load web page at url with message.<br/>If user clicks yes, launches the page in their web browser, starting the browser if required.",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			},
			{
				"type": "string",
				"name": "message",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "url",
				"subtype": null,
				"description": ""
			}
		],
		"id": 297,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLoadURL",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llVolumeDetect": {
		"description": "If detect is TRUE, VolumeDetect is enabled, physical object and avatars can pass through the object.",
		"parameters": [
			{
				"type": "integer",
				"name": "detect",
				"subtype": "boolean",
				"description": ""
			}
		],
		"id": 248,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llVolumeDetect",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llStopObjectAnimation": {
		"description": "Stop an animation for the current object.",
		"parameters": [
			{
				"type": "string",
				"name": "anim",
				"subtype": null,
				"description": "name of an animation in the inventory of the current object, or an animation uuid"
			}
		],
		"id": 505,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llStopObjectAnimation",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRemoveFromLandBanList": {
		"description": "Remove avatar from the land ban list",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			}
		],
		"id": 312,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRemoveFromLandBanList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRemoteLoadScript": {
		"description": "Deprecated",
		"parameters": [
			{
				"type": "key",
				"name": "target",
				"subtype": null,
				"description": "prim UUID that is in the same region "
			},
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "integer",
				"name": "running",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "start_param",
				"subtype": null,
				"description": ""
			}
		],
		"id": 251,
		"sleep": 3,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRemoteLoadScript",
		"deprecated": "llRemoteLoadScriptPin",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRegionSay": {
		"description": "Says the string msg on channel number channel that can be heard anywhere in the region by a script listening on channel.",
		"parameters": [
			{
				"type": "integer",
				"name": "channel",
				"subtype": "chat",
				"description": "input chat channel, any integer value "
			},
			{
				"type": "string",
				"name": "msg",
				"subtype": null,
				"description": ""
			}
		],
		"id": 331,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRegionSay",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llPlaySound": {
		"description": "Plays attached sound once at volume",
		"parameters": [
			{
				"type": "string",
				"name": "sound",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "float",
				"name": "volume",
				"subtype": null,
				"description": ""
			}
		],
		"id": 86,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llPlaySound",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetSitText": {
		"description": "Displays text rather than the default \"Sit Here\" in the right-click menu.",
		"parameters": [
			{
				"type": "string",
				"name": "text",
				"subtype": null,
				"description": ""
			}
		],
		"id": 242,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetSitText",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llUpdateCharacter": {
		"description": "Updates settings for a character",
		"parameters": [
			{
				"type": "list",
				"name": "options",
				"subtype": "instructions",
				"description": "Character configuration options."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llUpdateCharacter",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llToUpper": {
		"returnType": "string",
		"returns": "that is src with all upper-case characters.",
		"parameters": [
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": ""
			}
		],
		"id": 97,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llToUpper",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llXorBase64StringsCorrect": {
		"returnType": "string",
		"returns": "that is a Base64 XOR of str1 and str2.",
		"description": "Correctly performs an exclusive or on two Base 64 strings.",
		"parameters": [
			{
				"type": "string",
				"name": "str1",
				"subtype": null,
				"description": "Base64 string"
			},
			{
				"type": "string",
				"name": "str2",
				"subtype": null,
				"description": "Base64 string"
			}
		],
		"id": 319,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llXorBase64StringsCorrect",
		"deprecated": "llXorBase64",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLog": {
		"returnType": "float",
		"returns": "that is the natural logarithm of val.<br/>If val <= 0 return 0.0 instead.",
		"parameters": [
			{
				"type": "float",
				"name": "val",
				"subtype": null,
				"description": ""
			}
		],
		"id": 265,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLog",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llOwnerSay": {
		"description": "Says msg to the object's owner only, if the owner is currently in the same region.",
		"parameters": [
			{
				"type": "string",
				"name": "msg",
				"subtype": null,
				"description": ""
			}
		],
		"id": 292,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llOwnerSay",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llOffsetTexture": {
		"description": "Sets the texture u & v offsets for the chosen face.",
		"parameters": [
			{
				"type": "float",
				"name": "u",
				"subtype": null,
				"description": "horizontal (x) offset in the interval -1.0 <= u <= 1.0"
			},
			{
				"type": "float",
				"name": "v",
				"subtype": null,
				"description": "vertical (y) offset in the interval -1.0 <= v <= 1.0"
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": ""
			}
		],
		"id": 55,
		"sleep": 0.2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llOffsetTexture",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llTextBox": {
		"description": "Shows a dialog box on avatar's screen with the text message. It contains a text box for input, any text that is entered is said by avatar on channel when the \"Submit\" button is clicked.",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			},
			{
				"type": "string",
				"name": "message",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "channel",
				"subtype": null,
				"description": "input chat channel, any integer value "
			}
		],
		"id": 335,
		"sleep": 1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llTextBox",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llKey2Name": {
		"returnType": "string",
		"returns": "that is the legacy name of the prim or avatar specified by id.",
		"parameters": [
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": "group, avatar, or prim UUID that is in the same region "
			}
		],
		"id": 210,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llKey2Name",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetParcelPrimCount": {
		"returnType": "integer",
		"returns": "that is the total [http://community.secondlife.com/t5/English-Knowledge-Base/Calculating-land-impact/ta-p/974163 land impact] of objects on the parcel at pos of the given category",
		"parameters": [
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": "position in region coordinates "
			},
			{
				"type": "integer",
				"name": "category",
				"subtype": null,
				"description": "a PARCEL_COUNT_* flag"
			},
			{
				"type": "integer",
				"name": "sim_wide",
				"subtype": "boolean",
				"description": ""
			}
		],
		"id": 325,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetParcelPrimCount",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinkSitTarget": {
		"description": "Set the sit location for the linked prim(s). The sit location is relative to the prim's position and rotation.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": "Link number (0: unlinked, 1: root prim, >1: child prims and seated avatars) or a LINK_* flag "
			},
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": "Additional position for the sit target in local prim coordinates."
			},
			{
				"type": "rotation",
				"name": "rot",
				"subtype": null,
				"description": "Additional rotation for the sit target relative to the prim rotation."
			}
		],
		"id": null,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLinkSitTarget",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llTeleportAgent": {
		"description": "Teleports an agent to a landmark stored in the object's inventory.If landmark is an empty string, the avatar is teleported to the location position in the current region.If the destination is in the current region, the avatar will land facing look_at as a position within that region. Otherwise, look_at is treated as a unit direction.",
		"parameters": [
			{
				"type": "key",
				"name": "agent",
				"subtype": null,
				"description": "(the avatar to teleport, must be the owner)"
			},
			{
				"type": "string",
				"name": "landmark",
				"subtype": null,
				"description": ""
			},
			{
				"type": "vector",
				"name": "position",
				"subtype": null,
				"description": "The position within the local region to teleport the avatar to if no landmark was provided."
			},
			{
				"type": "vector",
				"name": "look_at",
				"subtype": null,
				"description": "The position within the region that the avatar should be turned to face upon arrival."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llTeleportAgent",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llListSort": {
		"returnType": "list",
		"returns": "that is src sorted by stride.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": "List to be sorted."
			},
			{
				"type": "integer",
				"name": "stride",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "ascending",
				"subtype": null,
				"description": "if TRUE then the sort order is ascending, otherwise the order is descending."
			}
		],
		"id": 184,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llListSort",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llTransferLindenDollars": {
		"returnType": "key",
		"returns": "used in a matching transaction_result event for the success or failure of the transfer. If the transaction is successful, this key will show in the [https://secondlife.com/my/account/transactions.php transaction history].",
		"description": "Transfer amount of L$ money from script owner to destination avatar.",
		"parameters": [
			{
				"type": "key",
				"name": "destination",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "amount",
				"subtype": null,
				"description": "number of L$, must be greater than zero, (amount &gt; 0)"
			}
		],
		"id": null,
		"sleep": 0,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llTransferLindenDollars",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llParticleSystem": {
		"description": "Defines a particle system for the containing prim based on a list of rules.",
		"parameters": [
			{
				"type": "list",
				"name": "rules",
				"subtype": "instructions",
				"description": "Particle system rules list in the format [ rule1, data1, rule2, data2 . . . rulen, datan ]"
			}
		],
		"id": 229,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llParticleSystem",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGiveInventoryList": {
		"description": "Gives inventory items to target, creating a new folder to put them in.",
		"parameters": [
			{
				"type": "key",
				"name": "target",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "folder",
				"subtype": null,
				"description": "folder name to use"
			},
			{
				"type": "list",
				"name": "inventory",
				"subtype": null,
				"description": ""
			}
		],
		"id": 231,
		"sleep": 3,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGiveInventoryList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetObjectName": {
		"returnType": "string",
		"returns": "that is the name of the prim the script is attached to.",
		"parameters": [],
		"id": 202,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetObjectName",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGodLikeRezObject": {
		"description": "Rez directly off of UUID if owner has god-bit set.",
		"parameters": [
			{
				"type": "key",
				"name": "inventory",
				"subtype": null,
				"description": ""
			},
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": ""
			}
		],
		"id": 135,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGodLikeRezObject",
		"experimental": false,
		"godMode": true,
		"experience": false,
		"broken": false
	},
	"llSetContentType": {
		"description": "Sets the Internet media type Content-Type header of any subsequent LSL HTTP server response via llHTTPResponse.",
		"parameters": [
			{
				"type": "key",
				"name": "request_id",
				"subtype": "handle",
				"description": "a valid http_request() key"
			},
			{
				"type": "integer",
				"name": "content_type",
				"subtype": null,
				"description": "Media type to use with any following llHTTPResponse(request_id, ...)"
			}
		],
		"id": null,
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llSetContentType",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedTouchFace": {
		"returnType": "integer",
		"returns": "that is the index of the face the avatar clicked on.",
		"parameters": [
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 338,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedTouchFace",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llResetOtherScript": {
		"description": "Resets script name.",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": ""
			}
		],
		"id": 249,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llResetOtherScript",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llStopSound": {
		"parameters": [],
		"id": 92,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llStopSound",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llStopLookAt": {
		"description": "Stop causing object to point at a target",
		"parameters": [],
		"id": 106,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llStopLookAt",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSignRSA": {
		"returnType": "string",
		"returns": "that is the Base64 RSA_(cryptosystem) signature of msg when using hash algorithm algorithm and secret key private_key.  Can be paired with llVerifyRSA to pass verifiable messages.",
		"parameters": [
			{
				"type": "string",
				"name": "private_key",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "msg",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "algorithm",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSignRSA",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLoopSoundMaster": {
		"description": "Plays attached sound looping at volume, declares it a sync master.",
		"parameters": [
			{
				"type": "string",
				"name": "sound",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "float",
				"name": "volume",
				"subtype": null,
				"description": ""
			}
		],
		"id": 88,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLoopSoundMaster",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llCreateLink": {
		"description": "Attempt to link the script's object with target.",
		"parameters": [
			{
				"type": "key",
				"name": "target",
				"subtype": null,
				"description": "prim UUID that is in the same region "
			},
			{
				"type": "integer",
				"name": "parent",
				"subtype": null,
				"description": "If FALSE, then target becomes the root. If TRUE, then the script's object becomes the root."
			}
		],
		"id": 141,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llCreateLink",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDeleteSubString": {
		"returnType": "string",
		"returns": "that is the result of removing characters from src from start to end.",
		"parameters": [
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "start",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "end",
				"subtype": null,
				"description": ""
			}
		],
		"id": 95,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDeleteSubString",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llCollisionFilter": {
		"description": "Sets the collision filter, exclusively or inclusively.",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": "filter for specific object name or avatar legacy name"
			},
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": "group, avatar, or prim UUID that is in the same region "
			},
			{
				"type": "integer",
				"name": "accept",
				"subtype": "boolean",
				"description": ""
			}
		],
		"id": 110,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llCollisionFilter",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llMapDestination": {
		"description": "Opens world map centered on simname with pos highlighted.<br />Only works for scripts attached to avatar, or during touch events.",
		"parameters": [
			{
				"type": "string",
				"name": "simname",
				"subtype": null,
				"description": "Region name"
			},
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": ""
			},
			{
				"type": "vector",
				"name": "look_at",
				"subtype": null,
				"description": "(not used)"
			}
		],
		"id": 309,
		"sleep": 1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llMapDestination",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llStringToBase64": {
		"returnType": "string",
		"parameters": [
			{
				"type": "string",
				"name": "str",
				"subtype": null,
				"description": ""
			}
		],
		"id": 260,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llStringToBase64",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llScriptProfiler": {
		"description": "Enables or disables the scripts profiling state.",
		"parameters": [
			{
				"type": "integer",
				"name": "flags",
				"subtype": null,
				"description": "PROFILE_* flags"
			}
		],
		"id": null,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llScriptProfiler",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llCollisionSprite": {
		"description": "Suppress default collision sprites, replace default impact sprite with impact_sprite",
		"parameters": [
			{
				"type": "string",
				"name": "impact_sprite",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			}
		],
		"id": 161,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llCollisionSprite",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": true
	},
	"llSendRemoteData": {
		"returnType": "key",
		"returns": "that is the message_id for the resulting remote_data events.",
		"description": "Send an XML-RPC request to dest through channel with payload of channel (in a string), integer idata and string sdata.",
		"parameters": [
			{
				"type": "key",
				"name": "channel",
				"subtype": "channel",
				"description": ""
			},
			{
				"type": "string",
				"name": "dest",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "idata",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "sdata",
				"subtype": null,
				"description": ""
			}
		],
		"id": 255,
		"sleep": 3,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSendRemoteData",
		"deprecated": "LSL_http_server",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llPassTouches": {
		"description": "Sets the pass-touches prim attribute.",
		"parameters": [
			{
				"type": "integer",
				"name": "pass",
				"subtype": "pass",
				"description": ""
			}
		],
		"id": 154,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llPassTouches",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetObjectDesc": {
		"returnType": "string",
		"returns": "containing the description of the prim the script is attached to.",
		"parameters": [],
		"id": 270,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetObjectDesc",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetVelocity": {
		"description": "Applies velocity to object",
		"parameters": [
			{
				"type": "vector",
				"name": "velocity",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "local",
				"subtype": "boolean",
				"description": ""
			}
		],
		"id": null,
		"sleep": 0,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llSetVelocity",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetVisualParams": {
		"returnType": "list",
		"returns": "of the details for agentid requested in params. ",
		"parameters": [
			{
				"type": "key",
				"name": "agentid",
				"subtype": null,
				"description": "Avatar ID in the same region."
			},
			{
				"type": "list",
				"name": "params",
				"subtype": null,
				"description": "List of visual param ids or names."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetVisualParams",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llResetScript": {
		"description": "Resets the script.",
		"parameters": [],
		"id": 163,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llResetScript",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llModifyLand": {
		"description": "Modify land with action on brush",
		"parameters": [
			{
				"type": "integer",
				"name": "action",
				"subtype": null,
				"description": "LAND_* flag"
			},
			{
				"type": "integer",
				"name": "brush",
				"subtype": null,
				"description": "LAND_*_BRUSH flag"
			}
		],
		"id": 159,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llModifyLand",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetAgentEnvironment": {
		"description": "This function sets environment values for an individual agent in an experience.  The changes to the environment persist until the agent moves to a new region or llSetAgentEnvironment is called for an agent with an empty list. Passing an empty list in params will strip all environmental settings applied to this agent as part of the experience",
		"parameters": [
			{
				"type": " key",
				"name": " agent_id",
				"subtype": null,
				"description": " The key for an agent in the region.  The agent must be in the region and must be participating in the experience. "
			},
			{
				"type": " float",
				"name": " transition",
				"subtype": null,
				"description": " The number of seconds over which to transition to the new settings."
			},
			{
				"type": " list",
				"name": " params",
				"subtype": null,
				"description": " A list of parameters to retrieve from the current environment. See table below for details."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llSetAgentEnvironment",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llDetectedLinkNumber": {
		"returnType": "integer",
		"parameters": [
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 40,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedLinkNumber",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llIntegerToBase64": {
		"returnType": "string",
		"returns": "that is a Base64 big endian encode of number",
		"parameters": [
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": ""
			}
		],
		"id": 280,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llIntegerToBase64",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llMakeFire": {
		"description": "Make fire like particles",
		"parameters": [
			{
				"type": "integer",
				"name": "particles",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "scale",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "vel",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "lifetime",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "arc",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "texture",
				"subtype": null,
				"description": ""
			},
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": ""
			}
		],
		"id": 103,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llMakeFire",
		"deprecated": "llParticleSystem",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDataSizeKeyValue": {
		"returnType": "key",
		"returns": "that can be used to identify the corresponding dataserver event to determine if this command succeeded or failed and the results.",
		"description": "Start an asynchronous transaction to request the used and total amount of data allocated for the Experience.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llDataSizeKeyValue",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llStopHover": {
		"description": "Stop hovering to a height",
		"parameters": [],
		"id": 124,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llStopHover",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llStopAnimation": {
		"description": "Stop animation anim for agent that granted PERMISSION_TRIGGER_ANIMATION if the permission has not been revoked.",
		"parameters": [
			{
				"type": "string",
				"name": "anim",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			}
		],
		"id": 130,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llStopAnimation",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llCollisionSound": {
		"description": "Suppress default collision sounds, replace default impact sounds with impact_sound at the volume impact_volume",
		"parameters": [
			{
				"type": "string",
				"name": "impact_sound",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "float",
				"name": "impact_volume",
				"subtype": null,
				"description": ""
			}
		],
		"id": 160,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llCollisionSound",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llMD5String": {
		"returnType": "string",
		"returns": "of 32 hex characters that is the MD5 checksum of src with a salt (cryptography) of \":\"+nonce.",
		"parameters": [
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "nonce",
				"subtype": null,
				"description": ""
			}
		],
		"id": 258,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llMD5String",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llComputeHash": {
		"returnType": "string",
		"returns": "hex-encoded hash digest of message using cryptographic algorithm",
		"parameters": [
			{
				"type": "string",
				"name": "message",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "algorithm",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llComputeHash",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetNumberOfNotecardLines": {
		"returnType": "key",
		"description": "Requests the number of lines in notecard name via the dataserver event (cast dataserver value to integer)",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": ""
			}
		],
		"id": 276,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetNumberOfNotecardLines",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llStartAnimation": {
		"description": "Start animation anim for agent that granted PERMISSION_TRIGGER_ANIMATION if the permission has not been revoked.",
		"parameters": [
			{
				"type": "string",
				"name": "anim",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			}
		],
		"id": 129,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llStartAnimation",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llEdgeOfWorld": {
		"returnType": "integer",
		"returns": "value. FALSE indicating there is a simulator in the direction indicated.",
		"description": "Checks to see whether the border hit by dir from pos is the edge of the world (has no neighboring simulator).",
		"parameters": [
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": "position in region coordinates "
			},
			{
				"type": "vector",
				"name": "dir",
				"subtype": "direction",
				"description": "direction"
			}
		],
		"id": 205,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llEdgeOfWorld",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llInstantMessage": {
		"description": "Sends an Instant Message specified in the string message to the user specified by user.",
		"parameters": [
			{
				"type": "key",
				"name": "user",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			},
			{
				"type": "string",
				"name": "message",
				"subtype": null,
				"description": ""
			}
		],
		"id": 118,
		"sleep": 2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llInstantMessage",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetLocalPos": {
		"returnType": "vector",
		"returns": "that is the position relative (local) to the root.",
		"parameters": [],
		"id": 60,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetLocalPos",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDeleteKeyValue": {
		"returnType": "key",
		"returns": "that can be used to identify the corresponding dataserver event to determine if this command succeeded or failed and the results.",
		"description": "Start an asynchronous transaction to delete a key-value pair associated with the script's Experience with the given key (k).",
		"parameters": [
			{
				"type": "string",
				"name": "k",
				"subtype": null,
				"description": "The key for the key-value pair"
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llDeleteKeyValue",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llSetAnimationOverride": {
		"description": "Set the animation (anim) that will play for the given animation state (anim_state). ",
		"parameters": [
			{
				"type": "string",
				"name": "anim_state",
				"subtype": null,
				"description": "animation state to be overriden"
			},
			{
				"type": "string",
				"name": "anim",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			}
		],
		"id": null,
		"sleep": 0,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llSetAnimationOverride",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetLinkMedia": {
		"returnType": "list",
		"returns": "of values in the order requested.",
		"description": "Get the media params for a particular face on a linked prim, given the desired list of named params.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": "Link number (0: unlinked, 1: root prim, >1: child prims and seated avatars) or a LINK_* flag "
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": "face",
				"description": "face number "
			},
			{
				"type": "list",
				"name": "params",
				"subtype": "instructions",
				"description": "a set of names (in no particular order)"
			}
		],
		"id": null,
		"sleep": 0,
		"energy": 0,
		"wiki": "https://wiki.secondlife.com/wiki/llGetLinkMedia",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSqrt": {
		"returnType": "float",
		"returns": "that is the square root of val.",
		"parameters": [
			{
				"type": "float",
				"name": "val",
				"subtype": null,
				"description": "positive number (val &gt;= 0.0)"
			}
		],
		"id": 4,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSqrt",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRezAtRoot": {
		"description": "Instantiate inventory object rotated to rot with its root at position, moving at velocity, using param as the start parameter",
		"parameters": [
			{
				"type": "string",
				"name": "inventory",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "vector",
				"name": "position",
				"subtype": null,
				"description": "position in region coordinates "
			},
			{
				"type": "vector",
				"name": "velocity",
				"subtype": null,
				"description": "initial velocity"
			},
			{
				"type": "rotation",
				"name": "rot",
				"subtype": null,
				"description": "initial rotation"
			},
			{
				"type": "integer",
				"name": "param",
				"subtype": null,
				"description": "on_rez event parameter and value returned by llGetStartParameter in the rezzed object (or by each of the items in a coalesced object)."
			}
		],
		"id": 286,
		"sleep": 0.1,
		"energy": 200,
		"wiki": "https://wiki.secondlife.com/wiki/llRezAtRoot",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedTouchUV": {
		"returnType": "vector",
		"returns": "that is the texture coordinates for where the prim was touched. The x & y vector positions contain the horizontal (u) & vertical (v) texture coordinates respectively ({{NoWrap",
		"parameters": [
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 337,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedTouchUV",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetCameraParams": {
		"description": "Sets multiple camera parameters at once.",
		"parameters": [
			{
				"type": "list",
				"name": "rules",
				"subtype": "instructions",
				"description": "Format is [ rule1, data1, rule2, data2 . . . rulen, datan ]"
			}
		],
		"id": 313,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetCameraParams",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetTorque": {
		"returnType": "vector",
		"returns": "that is the torque (if the script is physical)",
		"parameters": [],
		"id": 75,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetTorque",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetLandOwnerAt": {
		"returnType": "key",
		"returns": "that is the land owner at pos.",
		"parameters": [
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": "region coordinate"
			}
		],
		"id": 216,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetLandOwnerAt",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetTime": {
		"returnType": "float",
		"returns": "that is script time in seconds with subsecond precision since the script started, was last reset, or call to either llResetTime or llGetAndResetTime.",
		"parameters": [],
		"id": 82,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetTime",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinksetDataWriteProtected": {
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llLinksetDataWriteProtected",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llKeysKeyValue": {
		"returnType": "key",
		"returns": "that can be used to identify the corresponding dataserver event to determine if this command succeeded or failed.",
		"description": "Start an asynchronous transaction to request a number of keys from the script's Experience.",
		"parameters": [
			{
				"type": "integer",
				"name": "first",
				"subtype": null,
				"description": "Zero-based index of the first key to retrieve"
			},
			{
				"type": "integer",
				"name": "count",
				"subtype": null,
				"description": "Number of keys to retriever"
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llKeysKeyValue",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llGetInventoryType": {
		"returnType": "integer",
		"returns": "that is the type of the inventory item name",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": "name of an inventory item"
			}
		],
		"id": 301,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetInventoryType",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetAttached": {
		"returnType": "integer",
		"parameters": [],
		"id": 224,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetAttached",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetBoundingBox": {
		"returnType": "list",
		"returns": "that is the bounding box of object relative to its root prim, in local coordinates.<br/>Format: [ (vector) min_corner, (vector) max_corner ]",
		"parameters": [
			{
				"type": "key",
				"name": "object",
				"subtype": null,
				"description": "group, avatar, or prim UUID that is in the same region "
			}
		],
		"id": 277,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetBoundingBox",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetSunDirection": {
		"returnType": "vector",
		"description": "Returns a normalized vector to the current sun position at the location of object containing the script.  llGetSunDirection is the vector to the parcel's sun, llGetRegionSunDirection is the vector to region's sun. If there is no custom environment set for the current parcel llGetSunDirection returns the direction to the region's sun. These functions are altitude aware.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetSunDirection",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llReleaseControls": {
		"description": "Stop taking inputs (that were taken with llTakeControls), dequeues any remaining control events. If PERMISSION_TAKE_CONTROLS was previously granted, it will be revoked.",
		"parameters": [],
		"id": 112,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llReleaseControls",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llResetTime": {
		"description": "Resets the script-time timer to zero.",
		"parameters": [],
		"id": 83,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llResetTime",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinksetDataReset": {
		"description": "The llLinksetDataReset function erases all name:value pairs stored in the linkset's datastore.  When this function is called the linkset_data event is triggered in all scripts running in the linkset with an action of LINKSETDATA_RESET.",
		"parameters": [],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLinksetDataReset",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetObjectMass": {
		"returnType": "float",
		"returns": "that is the mass of id",
		"parameters": [
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": "group, avatar, or prim UUID that is in the same region "
			}
		],
		"id": 295,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetObjectMass",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetUsedMemory": {
		"returnType": "integer",
		"parameters": [],
		"id": null,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetUsedMemory",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedPos": {
		"returnType": "vector",
		"returns": "that is the position (in region coordinates) of detected object number.",
		"parameters": [
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 35,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedPos",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetTextureScale": {
		"returnType": "vector",
		"returns": "that is the texture scale on face (only the x and y components are used).",
		"parameters": [
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number or ALL_SIDES "
			}
		],
		"id": 179,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetTextureScale",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetInventoryNumber": {
		"returnType": "integer",
		"returns": "that is the number of items of a given type in the prims inventory.",
		"parameters": [
			{
				"type": "integer",
				"name": "type",
				"subtype": null,
				"description": "INVENTORY_* flag"
			}
		],
		"id": 146,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetInventoryNumber",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llList2CSV": {
		"returnType": "string",
		"returns": "of comma separated values taken in order from src.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			}
		],
		"id": 195,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llList2CSV",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetTimeOfDay": {
		"returnType": "float",
		"returns": "that is the time in seconds with subsecond precision since Second Life midnight (per the parcel-scoped day cycle settings) or region up-time (time since when the region was brought online/rebooted); whichever is smaller. If the parcel is configured so the sun stays in a constant position, then the returned value is the region up-time.",
		"parameters": [],
		"id": 80,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetTimeOfDay",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetTimestamp": {
		"returnType": "string",
		"returns": "that is the current date and time in the UTC time zone in the format \"YYYY-MM-DDThh:mm:ss.ff..fZ\"",
		"parameters": [],
		"id": 273,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetTimestamp",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRegionName": {
		"returnType": "string",
		"returns": "that is the current region name",
		"parameters": [],
		"id": 226,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRegionName",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedRot": {
		"returnType": "rotation",
		"parameters": [
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 38,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedRot",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDeleteSubList": {
		"returnType": "list",
		"returns": "that is a copy of src but with the slice from start to end removed.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": "source"
			},
			{
				"type": "integer",
				"name": "start",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "end",
				"subtype": null,
				"description": ""
			}
		],
		"id": 193,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDeleteSubList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llInsertString": {
		"returnType": "string",
		"parameters": [
			{
				"type": "string",
				"name": "dst",
				"subtype": null,
				"description": "destination of insertion"
			},
			{
				"type": "integer",
				"name": "pos",
				"subtype": null,
				"description": "position index for insert, first is 0"
			},
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": "source string to be inserted"
			}
		],
		"id": 96,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llInsertString",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedTouchNormal": {
		"returnType": "vector",
		"returns": "that is the surface normal (perpendicular to the surface) where the touch event was triggered.  Along with llDetectedTouchBinormal, this information can be used to find the [http://en.wikipedia.org/wiki/Tangent_space tangent space] at the touch location.",
		"parameters": [
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 340,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedTouchNormal",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetAttachedList": {
		"returnType": "list",
		"returns": "of object keys corresponding to public attachments worn by an avatar.",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			}
		],
		"id": null,
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetAttachedList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRegionMoonDirection": {
		"returnType": "vector",
		"description": "Returns a normalized vector to the current moon position at the location of object containing the script.  llGetMoonDirection is the vector to the parcel's moon, llGetRegionMoonDirection is the vector to region's moon. If there is no custom environment set for the current parcel llGetMoonDirection returns the direction to the region's moon. These functions are altitude aware.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRegionMoonDirection",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRegionMoonRotation": {
		"returnType": "rotation",
		"description": "Return the rotation applied to the moon for the region at the location of the object containing the script.  These function are altitude aware and so will pick up the moon for their current track. llGetRegionMoonRotation returns the rotation applied at the region level, llGetMoonRotation does the same for the parcel.  If there is no custom environment applied to parcel llGetMoonRotation returns the same value as llGetRegionMoonRotation.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRegionMoonRotation",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llCSV2List": {
		"returnType": "list",
		"returns": "made by parsing src, a string of comma separated values.",
		"description": "This function takes a string of values separated by commas, and turns it into a list.",
		"parameters": [
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": ""
			}
		],
		"id": 196,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llCSV2List",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDamage": {
		"returnType": "",
		"description": "This function delivers damage to tasks and agent in the same region.",
		"parameters": [
			{
				"type": "key",
				"name": "target",
				"subtype": null,
				"description": "The key for the task or avatar that will receive damage."
			},
			{
				"type": "float",
				"name": "damage",
				"subtype": null,
				"description": "The amount of damage to deliver to the targeted task or avatar."
			},
			{
				"type": "integer",
				"name": "damage_type",
				"subtype": null,
				"description": "The type of damage to deliver to the targeted task or avatar."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDamage",
		"experimental": true,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetDate": {
		"returnType": "string",
		"returns": "that is the current date in the UTC time zone in the format \"YYYY-MM-DD\".",
		"parameters": [],
		"id": 204,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetDate",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedOwner": {
		"returnType": "key",
		"parameters": [
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 33,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedOwner",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedRezzer": {
		"returnType": "key",
		"returns": "that is the UUID of the object or avatar that rezzed the detected object number.",
		"parameters": [
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedRezzer",
		"experimental": true,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetAnimation": {
		"returnType": "string",
		"returns": "that is the name of the currently playing locomotion animation for avatar id. See the table below.",
		"parameters": [
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": ""
			}
		],
		"id": 162,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetAnimation",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGround": {
		"returnType": "float",
		"returns": "that is the ground height directly below the prim position + offset",
		"parameters": [
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": ""
			}
		],
		"id": 42,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGround",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llJsonGetValue": {
		"returnType": "string",
		"returns": "made by parsing json, a string representing json and traversing as specified by specifiers.",
		"description": "Gets the value indicated by specifiers from the json string.",
		"parameters": [
			{
				"type": "string",
				"name": "json",
				"subtype": null,
				"description": ""
			},
			{
				"type": "list",
				"name": "specifiers",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llJsonGetValue",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llListFindList": {
		"returnType": "integer",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": "what to search in (haystack)"
			},
			{
				"type": "list",
				"name": "test",
				"subtype": null,
				"description": "what to search for (needle)"
			}
		],
		"id": 201,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llListFindList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llCreateKeyValue": {
		"returnType": "key",
		"returns": "that can be used to identify the corresponding dataserver event to determine if this command succeeded or failed.",
		"description": "Start an asynchronous transaction to create a key-value pair associated with the script's Experience using the given key (k) and value (v).",
		"parameters": [
			{
				"type": "string",
				"name": "k",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "v",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llCreateKeyValue",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llForceMouselook": {
		"description": "Sets if a sitting avatar should be forced into mouselook when they sit on this prim.",
		"parameters": [
			{
				"type": "integer",
				"name": "mouselook",
				"subtype": "boolean",
				"description": "boolean, if TRUE when an avatar sits on the prim, the avatar will be forced into [[mouselook]] mode, if FALSE the avatar will keep their current camera mode. "
			}
		],
		"id": 294,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llForceMouselook",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetTextureOffset": {
		"returnType": "vector",
		"returns": "that is the texture offset of face in the x (\"U\", horizontal) and y (\"V\", vertical) components. The z component is unused.",
		"parameters": [
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number or ALL_SIDES "
			}
		],
		"id": 178,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetTextureOffset",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetStatus": {
		"returnType": "integer",
		"returns": "equal to the status of the object.",
		"parameters": [
			{
				"type": "integer",
				"name": "status",
				"subtype": "status",
				"description": "A single STATUS_* flag"
			}
		],
		"id": 46,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetStatus",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetCameraPos": {
		"returnType": "vector",
		"returns": "that is the current camera position for the agent the task has permissions for.",
		"parameters": [],
		"id": 303,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetCameraPos",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llList2Integer": {
		"returnType": "integer",
		"returns": "that is at index in src.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": ""
			}
		],
		"id": 186,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llList2Integer",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetWallclock": {
		"returnType": "float",
		"returns": "that is the time in seconds since midnight Pacific time (PST/PDT), truncated to whole seconds. That is the same as the time of day in SLT expressed as seconds.",
		"parameters": [],
		"id": 81,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetWallclock",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llScriptDanger": {
		"returnType": "integer",
		"returns": "that is TRUE if pos is over public land, sandbox land, land that doesn't allow everyone to edit and build, or land that doesn't allow outside scripts.",
		"parameters": [
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": "position in region coordinates"
			}
		],
		"id": 246,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llScriptDanger",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetAnimationList": {
		"returnType": "list",
		"returns": "of keys of playing animations for avatar.",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": ""
			}
		],
		"id": 266,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetAnimationList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetInventoryCreator": {
		"returnType": "key",
		"returns": "of the creator of the inventory item.",
		"parameters": [
			{
				"type": "string",
				"name": "item",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			}
		],
		"id": 291,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetInventoryCreator",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetCameraAspect": {
		"returnType": "float",
		"returns": "value for the current camera's aspect ratio (e.g. width/height) of the agent for which the task has permissions.",
		"parameters": [],
		"id": 545,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetCameraAspect",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetEnvironment": {
		"returnType": "Integer",
		"description": "This function overrides the environmental settings for a region or a parcel. The owner of the script must have permission to modify the environment on the parcel or be an estate manager to change the entire region.An override for a given parameter can be set at the region scope or parcel scope.  It can also be set for a single sky track, all sky tracks, or both.  If an override of a given parameter is specified for both an individual track and all tracks, the individual track's override takes priority.Note that the list of valid parameters differs from those available for llGetEnvironment.",
		"parameters": [
			{
				"type": " vector",
				"name": " position",
				"subtype": null,
				"description": " The location on the region of the parcel to be changed. Use &lt;-1, -1, z&gt; for the entire region.  The z-component specifies which sky track to change, based on elevation.  Use z=-1 to set an override on the special 'all tracks' slot."
			},
			{
				"type": " list",
				"name": " params",
				"subtype": null,
				"description": " A list of parameters to change for the parcel or region. Passing an empty list will remove any modifications from previous calls to llSetEnvironment."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llSetEnvironment",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetStartParameter": {
		"returnType": "integer",
		"returns": "that is the script start/rez parameter.",
		"parameters": [],
		"id": 134,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetStartParameter",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedGrab": {
		"returnType": "vector",
		"returns": "that is the grab offset of the user touching the object; only works in the touch event.",
		"parameters": [
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 37,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedGrab",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedDamage": {
		"returnType": "list",
		"parameters": [
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 33,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedDamage",
		"experimental": true,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedKey": {
		"returnType": "key",
		"returns": "that is the UUID of the detected object or avatar number.",
		"parameters": [
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 32,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedKey",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRot2Euler": {
		"returnType": "vector",
		"returns": "that is the Euler representation (roll, pitch, yaw) of quat, with each component expressed in radians.",
		"parameters": [
			{
				"type": "rotation",
				"name": "quat",
				"subtype": null,
				"description": "Any valid rotation"
			}
		],
		"id": 15,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRot2Euler",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llCreateCharacter": {
		"description": "Creates a pathfinding entity, known as a \"character\", from the object containing the script.  Required to activate use of pathfinding functions.",
		"parameters": [
			{
				"type": "list",
				"name": "options",
				"subtype": "instructions",
				"description": "Character configuration options."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llCreateCharacter",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llListFindListNext": {
		"returnType": "integer",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": "what to search in (haystack)"
			},
			{
				"type": "list",
				"name": "test",
				"subtype": null,
				"description": "what to search for (needles)"
			},
			{
				"type": "integer",
				"name": "instance",
				"subtype": null,
				"description": "which instance (needle) to return"
			}
		],
		"id": 201,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llListFindListNext",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetKey": {
		"returnType": "key",
		"parameters": [],
		"id": 121,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetKey",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinksetDataWrite": {
		"returnType": "integer",
		"returns": "success or failure code.",
		"description": "Creates or updates a protected name:value pair from the linkset's datastore. Further attempts to read, write or update the name:value pair must use the protected versions of those functions and must supply the same string that was used in pass.",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "value",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "pass",
				"subtype": null,
				"description": "A pass phrase used to protect the name:value pair."
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLinksetDataWrite",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetInventoryPermMask": {
		"returnType": "integer",
		"returns": "of the requested permission category for the inventory item",
		"parameters": [
			{
				"type": "string",
				"name": "item",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "integer",
				"name": "category",
				"subtype": null,
				"description": "MASK_* flag"
			}
		],
		"id": 289,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetInventoryPermMask",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetAndResetTime": {
		"returnType": "float",
		"returns": "that is script time in seconds and then resets the script time to zero.",
		"parameters": [],
		"id": 84,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetAndResetTime",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetForce": {
		"description": "Applies force to the object (if the object is physical)",
		"parameters": [
			{
				"type": "vector",
				"name": "force",
				"subtype": null,
				"description": "directional force"
			},
			{
				"type": "integer",
				"name": "local",
				"subtype": "boolean",
				"description": "boolean, if TRUE force is treated as a local directional vector, if FALSE force is treated as a region directional vector "
			}
		],
		"id": 64,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetForce",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRot2Left": {
		"returnType": "vector",
		"returns": "that is the left vector defined by q, i.e. a unit vector pointing in the local positive Y direction",
		"description": "Computes the orientation of the local y-axis relative to the parent (i.e. relative to the root prim or the world).",
		"parameters": [
			{
				"type": "rotation",
				"name": "q",
				"subtype": null,
				"description": ""
			}
		],
		"id": 19,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRot2Left",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetCameraRot": {
		"returnType": "rotation",
		"returns": "that is the current camera orientation for the agent the task has permissions for.",
		"parameters": [],
		"id": 304,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetCameraRot",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llList2Json": {
		"returnType": "string",
		"returns": "that is either values serialized as a JSON type, or if an error was encountered JSON_INVALID.",
		"description": "This function takes a list and returns a JSON string of that list as either a json object or json array.",
		"parameters": [
			{
				"type": "string",
				"name": "type",
				"subtype": null,
				"description": ""
			},
			{
				"type": "list",
				"name": "values",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": 0,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llList2Json",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedName": {
		"returnType": "string",
		"returns": "that is the name of the detected item. ",
		"parameters": [
			{
				"type": "integer",
				"name": "item",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 31,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedName",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRegionAgentCount": {
		"returnType": "integer",
		"returns": "that is the number of avatars in the region.",
		"parameters": [],
		"id": 334,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRegionAgentCount",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetClosestNavPoint": {
		"returnType": "list",
		"returns": "containing a single vector which is the closest point on the navmesh to the point provided or an empty list.",
		"description": "Used to get a point on the navmesh that is the closest point to point.",
		"parameters": [
			{
				"type": "vector",
				"name": "point",
				"subtype": null,
				"description": "position in region coordinates "
			},
			{
				"type": "list",
				"name": "options",
				"subtype": "instructions",
				"description": "GCNP_* and other flags with their parameters. See options table"
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetClosestNavPoint",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGroundNormal": {
		"returnType": "vector",
		"returns": "that is the ground Normal (geometry) from the current position + offset.",
		"parameters": [
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": ""
			}
		],
		"id": 222,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGroundNormal",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llFloor": {
		"returnType": "integer",
		"returns": "that is the integer value of val rounded towards negative infinity (return <= val).",
		"parameters": [
			{
				"type": "float",
				"name": "val",
				"subtype": null,
				"description": "Any valid float value"
			}
		],
		"id": 9,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llFloor",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llList2Key": {
		"returnType": "key",
		"returns": "that is at index in src.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": ""
			}
		],
		"id": 189,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llList2Key",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llKeyCountKeyValue": {
		"returnType": "key",
		"returns": "that can be used to identify the corresponding dataserver event to determine if this command succeeded or failed and the results.",
		"description": "Start an asynchronous transaction to request the number of keys with the script's Experience.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llKeyCountKeyValue",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llDeleteCharacter": {
		"description": "Convert the object back to a standard object, removing all pathfinding properties.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llDeleteCharacter",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetachFromAvatar": {
		"description": "Detach object from avatar.",
		"parameters": [],
		"id": 114,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetachFromAvatar",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRequestURL": {
		"returnType": "key",
		"returns": "used for identifying the result of the request in the http_request event.",
		"description": "Requests one HTTP:// URL for use by this script. The http_request event is triggered with the result of the request.",
		"parameters": [],
		"id": 345,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRequestURL",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetSunRotation": {
		"returnType": "rotation",
		"description": "Return the rotation applied to the sun for the parcel at the location of the object containing the script.  These function are altitude aware and so will pick up the sun for their current track. llGetRegionSunRotation returns the rotation applied at the region level, llGetSunRotation does the same for the parcel.  If there is no custom environment applied to parcel llGetSunRotation returns the same value as llGetRegionSunRotation.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetSunRotation",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetAnimationOverride": {
		"returnType": "string",
		"returns": "that is the name of the animation that is being used for the specified animation state (anim_state). ",
		"parameters": [
			{
				"type": "string",
				"name": "anim_state",
				"subtype": null,
				"description": "animation state"
			}
		],
		"id": null,
		"sleep": 0,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetAnimationOverride",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetColor": {
		"returnType": "vector",
		"returns": "that is the Blinn-Phong color on face.",
		"parameters": [
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number or ALL_SIDES "
			}
		],
		"id": 52,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetColor",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llList2Float": {
		"returnType": "float",
		"returns": "that is at index in src.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": ""
			}
		],
		"id": 187,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llList2Float",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetInventoryName": {
		"returnType": "string",
		"returns": "that is the name of the inventory item number of type. Returns an empty string if no item of the specified type is found in the prim's inventory (or there are less than or equal to number items of the type).",
		"parameters": [
			{
				"type": "integer",
				"name": "type",
				"subtype": null,
				"description": "INVENTORY_* flag"
			},
			{
				"type": "integer",
				"name": "number",
				"subtype": null,
				"description": "Beginning from 0"
			}
		],
		"id": 147,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetInventoryName",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetCreator": {
		"returnType": "key",
		"returns": "for the creator of the prim.",
		"parameters": [],
		"id": 272,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetCreator",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetUsername": {
		"returnType": "string",
		"returns": "that is the unique username of the avatar specified by id.",
		"parameters": [
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			}
		],
		"id": 358,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetUsername",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llPursue": {
		"description": "Causes the object to pursue target.",
		"parameters": [
			{
				"type": "key",
				"name": "target",
				"subtype": null,
				"description": "to pursue."
			},
			{
				"type": "list",
				"name": "options",
				"subtype": "instructions",
				"description": "Parameters for pursuit; see below."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llPursue",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llList2List": {
		"returnType": "list",
		"returns": "that is a slice of src from start to end.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "start",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "end",
				"subtype": null,
				"description": ""
			}
		],
		"id": 192,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llList2List",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetTexture": {
		"returnType": "string",
		"returns": "that is the Blinn-Phong diffuse texture on face",
		"parameters": [
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": ""
			}
		],
		"id": 57,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetTexture",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetUnixTime": {
		"returnType": "integer",
		"returns": "that is the number of seconds elapsed since 00:00 hours, Jan 1, 1970 Coordinated Universal Time from the system clock.",
		"parameters": [],
		"id": 316,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetUnixTime",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetCenterOfMass": {
		"returnType": "vector",
		"parameters": [],
		"id": 183,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetCenterOfMass",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedTouchPos": {
		"returnType": "vector",
		"parameters": [
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 339,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedTouchPos",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedTouchBinormal": {
		"returnType": "vector",
		"returns": "that is the surface binormal (tangent to the surface, pointing along the positive T (V) direction of tangent space) where the touch event was triggered.  Along with llDetectedTouchNormal, this information can be used to find the [http://en.wikipedia.org/wiki/Tangent_space tangent space] at the touch location. ",
		"parameters": [
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 341,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedTouchBinormal",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGroundSlope": {
		"returnType": "vector",
		"returns": "that is the ground slope below the object position + offset",
		"parameters": [
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": ""
			}
		],
		"id": 221,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGroundSlope",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetCameraFOV": {
		"returnType": "float",
		"returns": "value for the current camera's field of view (FOV), in radians, of the agent for which the task has permissions.",
		"parameters": [],
		"id": 546,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetCameraFOV",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRot2Angle": {
		"returnType": "float",
		"returns": "that is the rotation angle represented by rot",
		"parameters": [
			{
				"type": "rotation",
				"name": "rot",
				"subtype": null,
				"description": ""
			}
		],
		"id": 171,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRot2Angle",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRot2Up": {
		"returnType": "vector",
		"returns": "that is the up vector defined by q, i.e. a unit vector pointing in the positive Z direction",
		"description": "Computes the orientation of the local z-axis relative to the parent (i.e. the root prim or the world).",
		"parameters": [
			{
				"type": "rotation",
				"name": "q",
				"subtype": null,
				"description": ""
			}
		],
		"id": 20,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRot2Up",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llHMAC": {
		"returnType": "string",
		"returns": "that is the Base64 HMAC hash of msg when using hash algorithm algorithm and secret key private_key.",
		"parameters": [
			{
				"type": "string",
				"name": "private_key",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "msg",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "algorithm",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llHMAC",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llPointAt": {
		"description": "Make agent that owns object point at pos",
		"parameters": [
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": ""
			}
		],
		"id": 131,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llPointAt",
		"deprecated": "none",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRound": {
		"returnType": "integer",
		"parameters": [
			{
				"type": "float",
				"name": "val",
				"subtype": null,
				"description": "Any valid float value"
			}
		],
		"id": 11,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRound",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRotLookAt": {
		"description": "Causes an object to smoothly rotate to target_direction with strength resistance at damping force.Maintains rotation target_direction until stopped with llStopLookAt.",
		"parameters": [
			{
				"type": "rotation",
				"name": "target_direction",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "strength",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "damping",
				"subtype": null,
				"description": ""
			}
		],
		"id": 127,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRotLookAt",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRequestUsername": {
		"returnType": "key",
		"returns": "that is used to identify the dataserver event when it is raised.If id is not the UUID of an avatar, the dataserver event is not raised.",
		"description": "Requests the Username of the agent identified by id. When the Username is available the dataserver event will be raised. The agent identified by id does not need to be in the same region or online at the time of the request. ",
		"parameters": [
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": ""
			}
		],
		"id": 359,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRequestUsername",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llReadKeyValue": {
		"returnType": "key",
		"returns": "that can be used to identify the corresponding dataserver event to determine if this command succeeded or failed and the results.",
		"description": "Start an asynchronous transaction to read the value associated with the specified key (k) and the script's Experience.",
		"parameters": [
			{
				"type": "string",
				"name": "k",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llReadKeyValue",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llReturnObjectsByID": {
		"returnType": "integer",
		"returns": "that is the number of objects successfully returned to their owners or an ERR_* flag.",
		"description": "If the script is owned by an agent, PERMISSION_RETURN_OBJECTS may be granted by the owner.  If the script is owned by a group, this permission may be granted by an agent belonging to the group's \"Owners\" role.",
		"parameters": [
			{
				"type": "list",
				"name": "objects",
				"subtype": null,
				"description": "list of object uuids (keys)"
			}
		],
		"sleep": 0,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llReturnObjectsByID",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRot2Axis": {
		"returnType": "vector",
		"returns": "the rotation axis represented by rot",
		"parameters": [
			{
				"type": "rotation",
				"name": "rot",
				"subtype": null,
				"description": ""
			}
		],
		"id": 170,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRot2Axis",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRotTargetRemove": {
		"description": "Removes rotational target handle registered with llRotTarget",
		"parameters": [
			{
				"type": "integer",
				"name": "handle",
				"subtype": "handle",
				"description": ""
			}
		],
		"id": 69,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRotTargetRemove",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetClickAction": {
		"description": "Sets the action performed when a prim is clicked upon (aka click action).",
		"parameters": [
			{
				"type": "integer",
				"name": "action",
				"subtype": "click_action",
				"description": "CLICK_ACTION_* flag"
			}
		],
		"id": 333,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetClickAction",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llResetLandBanList": {
		"description": "Removes all residents from the land ban list.",
		"parameters": [],
		"id": 321,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llResetLandBanList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetBuoyancy": {
		"description": "Sets the buoyancy of the task or object. Requires physics to be enabled.",
		"parameters": [
			{
				"type": "float",
				"name": "buoyancy",
				"subtype": null,
				"description": ""
			}
		],
		"id": 122,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetBuoyancy",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRequestUserKey": {
		"returnType": "key",
		"description": "Requests the Agent ID for the agent identified by name from the dataserver. The name given may be either the current name of an avatar or a historical name that has been used in the past. If no agent can be found with the supplied name this function returns the value NULL_KEY. Returns a handle (a key) that can be used to identify the request when the dataserver event is raised. The agent being searched for with this function does not need to be signed on to Second Life.",
		"parameters": [
			{
				"type": "string",
				"name": "username",
				"subtype": null,
				"description": "the username of the avatar to retrieve the UUID of."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llRequestUserKey",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetAngularVelocity": {
		"description": "Applies rotational velocity to object. It does the same job as llApplyRotationalImpulse but doesn't depend of the mass of object .",
		"parameters": [
			{
				"type": "vector",
				"name": "initial_omega",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "local",
				"subtype": "boolean",
				"description": "boolean, if TRUE force is treated as a local directional vector, if FALSE force is treated as a region directional vector "
			}
		],
		"id": null,
		"sleep": 0,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llSetAngularVelocity",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetObjectName": {
		"description": "Sets the prim's name according to the name parameter.",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": ""
			}
		],
		"id": 203,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetObjectName",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetCameraEyeOffset": {
		"description": "Sets the camera eye offset for avatars that sit on the object.",
		"parameters": [
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": ""
			}
		],
		"id": 243,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetCameraEyeOffset",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llDetectedTouchST": {
		"returnType": "vector",
		"returns": "that is the surface coordinates for where the prim was touched. The x & y vector positions contain the horizontal (s) & vertical (t) face coordinates respectively ({{NoWrap",
		"parameters": [
			{
				"type": "integer",
				"name": "index",
				"subtype": null,
				"description": "Index of detection information "
			}
		],
		"id": 342,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llDetectedTouchST",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetInventoryKey": {
		"returnType": "key",
		"returns": "that is the UUID of the inventory name",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			}
		],
		"id": 175,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetInventoryKey",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRezObjectWithParams": {
		"returnType": "key",
		"returns": "which will be the key of the object when it is successfully rezzed in the world.",
		"description": "Instantiate inventory object at pos with an initial set of parameters specified in params.pos will default to the position of the object containing the script, unless REZ_POS is specified. (see below)",
		"parameters": [
			{
				"type": "string",
				"name": "inventory",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "list",
				"name": "params",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": 0.1,
		"energy": 200,
		"wiki": "https://wiki.secondlife.com/wiki/llRezObjectWithParams",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llJsonValueType": {
		"returnType": "string",
		"description": "Gets the JSON type for the value in json at the location specifiers. ",
		"parameters": [
			{
				"type": "string",
				"name": "json",
				"subtype": null,
				"description": "A string serialization of a json object."
			},
			{
				"type": "list",
				"name": "specifiers",
				"subtype": null,
				"description": "A path to a value in the json parameter."
			}
		],
		"sleep": 0,
		"energy": 0,
		"wiki": "https://wiki.secondlife.com/wiki/llJsonValueType",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRezObject": {
		"description": "Instantiate inventory object at pos with velocity vel and rotation rot with start parameter param",
		"parameters": [
			{
				"type": "string",
				"name": "inventory",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "vector",
				"name": "pos",
				"subtype": null,
				"description": "position in region coordinates "
			},
			{
				"type": "vector",
				"name": "vel",
				"subtype": null,
				"description": "velocity (max magnitude is approximately 200m/s)"
			},
			{
				"type": "rotation",
				"name": "rot",
				"subtype": null,
				"description": "rotation"
			},
			{
				"type": "integer",
				"name": "param",
				"subtype": null,
				"description": "on_rez event parameter and value returned by llGetStartParameter in the rezzed object (or by each of the items in a coalesced object)."
			}
		],
		"id": 104,
		"sleep": 0.1,
		"energy": 200,
		"wiki": "https://wiki.secondlife.com/wiki/llRezObject",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llHTTPRequest": {
		"returnType": "key",
		"returns": "identifying the HTTP request made.",
		"description": "Sends an HTTP request to the specified URL with the body of the request and parameters. When the response is received, a http_response event is raised.",
		"parameters": [
			{
				"type": "string",
				"name": "url",
				"subtype": null,
				"description": "A valid HTTP/HTTPS URL."
			},
			{
				"type": "list",
				"name": "parameters",
				"subtype": "instructions",
				"description": "configuration parameters, specified as HTTP_* flag-value pairs[ parameter1, value1, parameter2, value2, . . . parameterN, valueN]"
			},
			{
				"type": "string",
				"name": "body",
				"subtype": null,
				"description": "Contents of the request."
			}
		],
		"id": 230,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llHTTPRequest",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinkParticleSystem": {
		"description": "A particle system defined by a list of rules is set for the prim(s) link.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": ""
			},
			{
				"type": "list",
				"name": "rules",
				"subtype": "instructions",
				"description": ""
			}
		],
		"id": 355,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLinkParticleSystem",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetLinkColor": {
		"description": "If a prim exists in the link set at link, set the Blinn-Phong color on face of that prim.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": ""
			},
			{
				"type": "vector",
				"name": "color",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": ""
			}
		],
		"id": 140,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetLinkColor",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetParcelMusicURL": {
		"description": "Sets the streaming audio URL for the parcel object is on",
		"parameters": [
			{
				"type": "string",
				"name": "url",
				"subtype": null,
				"description": ""
			}
		],
		"id": 267,
		"sleep": 2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetParcelMusicURL",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinkSetSoundRadius": {
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llLinkSetSoundRadius",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetLinkCamera": {
		"description": "Sets the camera eye offset, and the offset that camera is looking at, for avatars that sit on the linked prim.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": "Link number (0: unlinked, 1: root prim, >1: child prims and seated avatars) or a LINK_* flag "
			},
			{
				"type": "vector",
				"name": "eye",
				"subtype": null,
				"description": ""
			},
			{
				"type": "vector",
				"name": "at",
				"subtype": null,
				"description": ""
			}
		],
		"id": null,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetLinkCamera",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llReturnObjectsByOwner": {
		"returnType": "integer",
		"returns": "that is the number of objects successfully returned to their owners or an ERR_* flag.",
		"description": "If the script is owned by an agent, PERMISSION_RETURN_OBJECTS may be granted by the owner.  If the script is owned by a group, this permission may be granted by an agent belonging to the group's \"Owners\" role.",
		"parameters": [
			{
				"type": "key",
				"name": "owner",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			},
			{
				"type": "integer",
				"name": "scope",
				"subtype": null,
				"description": "OBJECT_RETURN_* flag"
			}
		],
		"sleep": 0,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llReturnObjectsByOwner",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGroundRepel": {
		"description": "Critically damps to height if within height * 0.5 of ground or water level (which ever is higher). ",
		"parameters": [
			{
				"type": "float",
				"name": "height",
				"subtype": null,
				"description": "Distance above the ground"
			},
			{
				"type": "integer",
				"name": "water",
				"subtype": null,
				"description": "boolean, if TRUE then hover above water too."
			},
			{
				"type": "float",
				"name": "tau",
				"subtype": null,
				"description": ""
			}
		],
		"id": 230,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGroundRepel",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRotateTexture": {
		"description": "Sets the texture rotation of the chosen face to angle.",
		"parameters": [
			{
				"type": "float",
				"name": "angle",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number or ALL_SIDES "
			}
		],
		"id": 56,
		"sleep": 0.2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRotateTexture",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetScriptState": {
		"description": "Set the running state of the script name.",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "running",
				"subtype": "boolean",
				"description": "boolean, if TRUE the script will be enabled, if FALSE the script will be disabled "
			}
		],
		"id": 148,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetScriptState",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetDamage": {
		"description": "Sets the amount of damage that will be done when this object hits an avatar.",
		"parameters": [
			{
				"type": "float",
				"name": "damage",
				"subtype": null,
				"description": "range: -100.0 (full heal) ~ 100.0 (instant kill)"
			}
		],
		"id": 157,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetDamage",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinkAdjustSoundVolume": {
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llLinkAdjustSoundVolume",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llVecDist": {
		"returnType": "float",
		"returns": "that is the undirected nonnegative distance between vec_a and vec_b.",
		"parameters": [
			{
				"type": "vector",
				"name": "vec_a",
				"subtype": null,
				"description": "Any valid vector"
			},
			{
				"type": "vector",
				"name": "vec_b",
				"subtype": null,
				"description": "Any valid vector"
			}
		],
		"id": 14,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llVecDist",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetObjectPermMask": {
		"description": "Sets the given permission mask to the new value on the root object the task is attached to.",
		"parameters": [
			{
				"type": "integer",
				"name": "mask",
				"subtype": null,
				"description": "MASK_* flag"
			},
			{
				"type": "integer",
				"name": "value",
				"subtype": null,
				"description": "bit-field, PERM_* flags"
			}
		],
		"id": 288,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetObjectPermMask",
		"experimental": false,
		"godMode": true,
		"experience": false,
		"broken": false
	},
	"llSetTimerEvent": {
		"description": "Cause the timer event to be triggered a maximum of once every sec seconds. Passing in 0.0 stops further timer events.",
		"parameters": [
			{
				"type": "float",
				"name": "sec",
				"subtype": null,
				"description": "Any positive non-zero value to enable, zero (0.0) to disable."
			}
		],
		"id": 107,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetTimerEvent",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llTan": {
		"returnType": "float",
		"returns": "that is the tangent of theta.",
		"parameters": [
			{
				"type": "float",
				"name": "theta",
				"subtype": null,
				"description": ""
			}
		],
		"id": 2,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llTan",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llWanderWithin": {
		"description": "Sets a character to wander about a central spot within a specified radius.",
		"parameters": [
			{
				"type": "vector",
				"name": "origin",
				"subtype": null,
				"description": "Central point to wander about"
			},
			{
				"type": "vector",
				"name": "dist",
				"subtype": null,
				"description": "Sets how far the character may wander from origin, along each world-aligned axis"
			},
			{
				"type": "list",
				"name": "options",
				"subtype": "instructions",
				"description": "WANDER_* flags and their parameters"
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llWanderWithin",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRot2Fwd": {
		"returnType": "vector",
		"returns": "that is the forward vector defined by q, i.e. a unit vector pointing in the local positive X direction.",
		"description": "Computes the orientation of the local x-axis relative to the parent (i.e. the root prim or the world).",
		"parameters": [
			{
				"type": "rotation",
				"name": "q",
				"subtype": null,
				"description": ""
			}
		],
		"id": 18,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRot2Fwd",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetTexture": {
		"description": "Sets the Blinn-Phong diffuse texture of this prim's face.",
		"parameters": [
			{
				"type": "string",
				"name": "texture",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number or ALL_SIDES "
			}
		],
		"id": 53,
		"sleep": 0.2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetTexture",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llOpenRemoteDataChannel": {
		"description": "Creates a channel to listen for XML-RPC calls. Will trigger a remote_data event with channel id once it is available.",
		"parameters": [],
		"id": 254,
		"sleep": 1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llOpenRemoteDataChannel",
		"deprecated": "LSL_http_server",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSameGroup": {
		"returnType": "integer",
		"returns": "that is TRUE if uuid and the prim the script is in are of the same group, otherwise FALSE.",
		"parameters": [
			{
				"type": "key",
				"name": "uuid",
				"subtype": null,
				"description": ""
			}
		],
		"id": 219,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSameGroup",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetScale": {
		"description": "Sets the size of the prim according to size",
		"parameters": [
			{
				"type": "vector",
				"name": "size",
				"subtype": null,
				"description": ""
			}
		],
		"id": 47,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetScale",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRegionTimeDilation": {
		"returnType": "float",
		"returns": "that is the current time dilation, the value range is {{Interval",
		"parameters": [],
		"id": 227,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRegionTimeDilation",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetPrimURL": {
		"description": "Updates the URL for the web page shown on the sides of the object.",
		"parameters": [
			{
				"type": "string",
				"name": "url",
				"subtype": null,
				"description": ""
			}
		],
		"id": 305,
		"sleep": 20,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetPrimURL",
		"deprecated": "LlSetPrimMediaParams",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetLinkAlpha": {
		"description": "If a prim exists in the link set at link, set the Blinn-Phong alpha on face of that prim.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": ""
			},
			{
				"type": "float",
				"name": "alpha",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": ""
			}
		],
		"id": 274,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetLinkAlpha",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetRegionPos": {
		"returnType": "integer",
		"returns": "boolean, TRUE if the object is successfully placed within 0.1 m of position, FALSE otherwise. See #Specification for details.",
		"description": "Tries to move the entire object so that the root prim is within 0.1m of position.",
		"parameters": [
			{
				"type": "vector",
				"name": "position",
				"subtype": null,
				"description": "position in region coordinates "
			}
		],
		"id": null,
		"sleep": 0,
		"energy": 0,
		"wiki": "https://wiki.secondlife.com/wiki/llSetRegionPos",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetMemoryLimit": {
		"returnType": "integer",
		"description": "Request limit bytes to be reserved for this script.",
		"parameters": [
			{
				"type": "integer",
				"name": "limit",
				"subtype": null,
				"description": ""
			}
		],
		"id": null,
		"sleep": 0,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llSetMemoryLimit",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetSoundQueueing": {
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": ""
			},
			{
				"type": "integer",
				"name": "queue",
				"subtype": "boolean",
				"description": ""
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetSoundQueueing",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRegionSunDirection": {
		"returnType": "vector",
		"description": "Returns a normalized vector to the current sun position at the location of object containing the script.  llGetSunDirection is the vector to the parcel's sun, llGetRegionSunDirection is the vector to region's sun. If there is no custom environment set for the current parcel llGetSunDirection returns the direction to the region's sun. These functions are altitude aware.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRegionSunDirection",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llName2Key": {
		"returnType": "key",
		"returns": "the Agent ID for the named agent in the region. If there is no agent with the specified name currently signed onto the region, this function returns the value NULL_KEY. Names are always provided in the form <nowiki>\"First[ Last]\" or \"first[.last]\"</nowiki> (first name with an optional last name.) If the last name is omitted a last name of \"Resident\" is assumed. Case is not considered when resolving agent names.",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": "Name of the avatar to retrieve the UUID of."
			}
		],
		"sleep": 0,
		"energy": 0,
		"wiki": "https://wiki.secondlife.com/wiki/llName2Key",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSound": {
		"description": "Plays sound at volume and whether it should loop or not.",
		"parameters": [
			{
				"type": "string",
				"name": "sound",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "float",
				"name": "volume",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "queue",
				"subtype": null,
				"description": "boolean, whether or not to queue the song (TRUE) or interrupt the playing song (FALSE)."
			},
			{
				"type": "integer",
				"name": "loop",
				"subtype": null,
				"description": "boolean, whether or not to loop the song."
			}
		],
		"id": 85,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSound",
		"deprecated": "llPlaySound",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llListRandomize": {
		"returnType": "list",
		"returns": "which is a randomized permutation of src.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": "A list you want to randomize."
			},
			{
				"type": "integer",
				"name": "stride",
				"subtype": null,
				"description": ""
			}
		],
		"id": 197,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llListRandomize",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetPayPrice": {
		"description": "Suggest default amounts for the pay text field and pay buttons of the appearing dialog when someone chooses to pay this object.",
		"parameters": [
			{
				"type": "integer",
				"name": "price",
				"subtype": null,
				"description": "PAY_* constant or positive value (including zero)"
			},
			{
				"type": "list",
				"name": "quick_pay_buttons",
				"subtype": null,
				"description": "Four PAY_* constants and/or positive integer values (zero is not shown)"
			}
		],
		"id": 302,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetPayPrice",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llReplaceAgentEnvironment": {
		"returnType": "Integer",
		"description": "The llReplaceAgentEnvironment function overrides the current region and parcel environment seen by an agent. The new environment persists until the agent crosses to a new region or this function is called with the NULL_KEY or empty string in the environment parameter for the particular agent, doing so will strip all environmental settings applied to this agent as part of the experience. This function must be executed as part of an experience. ",
		"parameters": [
			{
				"type": "key",
				"name": "agent_id",
				"subtype": null,
				"description": "The key for an agent in the region. The agent must be in the region and must be participating in the experience."
			},
			{
				"type": "float",
				"name": "transition",
				"subtype": null,
				"description": "The number of seconds over which to transition to the new settings."
			},
			{
				"type": "string",
				"name": "environment",
				"subtype": null,
				"description": "The name of an environmental setting in the object's inventory or the asset ID for an environment."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llReplaceAgentEnvironment",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llSetStatus": {
		"description": "Sets the object status attributes indicated in the status} mask to value",
		"parameters": [
			{
				"type": "integer",
				"name": "status",
				"subtype": "status",
				"description": "bit mask, STATUS_* flags"
			},
			{
				"type": "integer",
				"name": "value",
				"subtype": null,
				"description": ""
			}
		],
		"id": 45,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetStatus",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRequestExperiencePermissions": {
		"description": "Asks the agent for permission to participate in the script's Experience.",
		"parameters": [
			{
				"type": "key",
				"name": "agent",
				"subtype": null,
				"description": "Key of the agent to request permissions from"
			},
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": "Deprecated, no longer used"
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llRequestExperiencePermissions",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llGetRegionSunRotation": {
		"returnType": "rotation",
		"description": "Return the rotation applied to the sun for the region at the location of the object containing the script.  These functions are altitude aware and so will pick up the sun for their current track. llGetRegionSunRotation returns the rotation applied at the region level, llGetSunRotation does the same for the parcel.  If there is no custom environment applied to parcel llGetSunRotation returns the same value as llGetRegionSunRotation.",
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRegionSunRotation",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRemoteDataSetRegion": {
		"description": "Used with XML-RPC.  If an object using remote data channels changes regions, you must call this function to reregister the remote data channels.",
		"parameters": [],
		"id": 263,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRemoteDataSetRegion",
		"deprecated": "LSL_http_server",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llTeleportAgentHome": {
		"description": "Teleports avatar on owner's land to their home location without any warning, similar to a God Summons or dying.",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			}
		],
		"id": 158,
		"sleep": 5,
		"energy": 100,
		"wiki": "https://wiki.secondlife.com/wiki/llTeleportAgentHome",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llReplaceEnvironment": {
		"returnType": "Integer",
		"description": "The llReplaceEnvironment function replaces the environment in a parcel or a region. Either for a single elevation track or the entire environment. The owner of the script must have permission to edit the environment on the destination parcel, or be an estate manage in the case of an entire region.In most cases errors are reported as a return value from the function (see table below). However, issues with the environment assets may be reported in the debug chat.",
		"parameters": [
			{
				"type": "vector",
				"name": "position",
				"subtype": null,
				"description": "The position in the region of the parcel that will receive the new environment. To change the entire region use &lt;-1, -1, -1&gt;. The z component of the vector is ignored."
			},
			{
				"type": "string",
				"name": "environment",
				"subtype": null,
				"description": "The name of an environmental setting in the object's inventory or the asset ID for an environment. NULL_KEY or empty string to remove the environment."
			},
			{
				"type": "integer",
				"name": "track_no",
				"subtype": null,
				"description": "The elevation zone to change. 0 for water, 1 for ground level, 2 for sky 1000m, 3 for sky 2000m, 4 for sky 3000m. -1 to change all tracks."
			},
			{
				"type": "integer",
				"name": "day_length",
				"subtype": null,
				"description": "The length in seconds for the day cycle. -1 to leave unchanged."
			},
			{
				"type": "integer",
				"name": "day_offset",
				"subtype": null,
				"description": "The offset in seconds from UTC. -1 to leave unchanged."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llReplaceEnvironment",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llOpenFloater": {
		"returnType": "integer",
		"returns": "Error code, or 0 if no error.",
		"parameters": [
			{
				"type": "string",
				"name": "floater_name",
				"subtype": null,
				"description": "Identifier of the viewer floater to open."
			},
			{
				"type": "string",
				"name": "url",
				"subtype": null,
				"description": "URL to open in the floater."
			},
			{
				"type": "list",
				"name": "params",
				"subtype": null,
				"description": "Options to apply to floater."
			}
		],
		"id": null,
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llOpenFloater",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llList2ListSlice": {
		"returnType": "list",
		"returns": "of the slice_index'th element of every stride in strided list whose index is a multiple of stride in the range start to end.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "start",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "end",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "stride",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "slice_index",
				"subtype": null,
				"description": ""
			}
		],
		"id": 198,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llList2ListSlice",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llTarget": {
		"returnType": "integer",
		"returns": "to unregister the target with llTargetRemove.",
		"description": "This function is to have the script know when it has reached a position.<br/>It registers a position with a range that triggers at_target and not_at_target events continuously until unregistered.",
		"parameters": [
			{
				"type": "vector",
				"name": "position",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "range",
				"subtype": null,
				"description": ""
			}
		],
		"id": 66,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llTarget",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetVehicleFlags": {
		"description": "Enabled the specified vehicle flags",
		"parameters": [
			{
				"type": "integer",
				"name": "flags",
				"subtype": "vehicle_flag",
				"description": "mask of VEHICLE_FLAG_* flags"
			}
		],
		"id": 236,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetVehicleFlags",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetHoverHeight": {
		"description": "Critically damps to a height above the ground (or water) in tau seconds.",
		"parameters": [
			{
				"type": "float",
				"name": "height",
				"subtype": null,
				"description": "Distance to hover above the ground (if negative, hovers below ground)"
			},
			{
				"type": "integer",
				"name": "water",
				"subtype": "boolean",
				"description": ""
			},
			{
				"type": "float",
				"name": "tau",
				"subtype": null,
				"description": ""
			}
		],
		"id": 123,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetHoverHeight",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llVecMag": {
		"returnType": "float",
		"returns": "that is the magnitude of the vector (the undirected non-negative distance from vec to <0.0, 0.0, 0.0>).",
		"parameters": [
			{
				"type": "vector",
				"name": "vec",
				"subtype": null,
				"description": ""
			}
		],
		"id": 12,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llVecMag",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetObjectDesc": {
		"description": "Sets the prims description",
		"parameters": [
			{
				"type": "string",
				"name": "description",
				"subtype": null,
				"description": ""
			}
		],
		"id": 271,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetObjectDesc",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetVehicleType": {
		"description": "Sets the vehicle type to one of the default types.",
		"parameters": [
			{
				"type": "integer",
				"name": "type",
				"subtype": "vehicle_type",
				"description": ""
			}
		],
		"id": 232,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetVehicleType",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRequestDisplayName": {
		"returnType": "key",
		"description": "Requests the Display Name of the agent identified by id. When the Display Name is available the dataserver event will be raised. The agent identified by id does not need to be in the same region or online at the time of the request.",
		"parameters": [
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": ""
			}
		],
		"id": 361,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRequestDisplayName",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetPhysicsMaterial": {
		"description": "Used to set the physical characteristics of an object.",
		"parameters": [
			{
				"type": "integer",
				"name": "material_mask",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "gravity_multiplier",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "restitution",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "friction",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "density",
				"subtype": null,
				"description": ""
			}
		],
		"id": null,
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llSetPhysicsMaterial",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llToLower": {
		"returnType": "string",
		"returns": "that is src with all lower-case letters",
		"parameters": [
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": ""
			}
		],
		"id": 98,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llToLower",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetInventoryPermMask": {
		"description": "Sets the given permission category to the new value on the inventory item.",
		"parameters": [
			{
				"type": "string",
				"name": "item",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "integer",
				"name": "category",
				"subtype": "mask",
				"description": "MASK_* flag"
			},
			{
				"type": "integer",
				"name": "value",
				"subtype": "perm",
				"description": "Permission bit field (PERM_* flags)"
			}
		],
		"id": 290,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetInventoryPermMask",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetLinkTexture": {
		"description": "If a prim exists in the link set at link, set Blinn-Phong diffuse texture on face of that prim.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "texture",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": ""
			}
		],
		"id": 329,
		"sleep": 0.2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetLinkTexture",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLoopSoundSlave": {
		"description": "Plays attached sound looping at volume, synced to most audible sync master declared by llLoopSoundMaster.",
		"parameters": [
			{
				"type": "string",
				"name": "sound",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "float",
				"name": "volume",
				"subtype": null,
				"description": ""
			}
		],
		"id": 89,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llLoopSoundSlave",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRemoveInventory": {
		"description": "Remove the named inventory item",
		"parameters": [
			{
				"type": "string",
				"name": "item",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			}
		],
		"id": 151,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRemoveInventory",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRequestSimulatorData": {
		"returnType": "key",
		"returns": "for a dataserver event response.",
		"description": "Requests data about region. When data is available the dataserver event will be raised.",
		"parameters": [
			{
				"type": "string",
				"name": "region",
				"subtype": null,
				"description": "Case sensitive region name."
			},
			{
				"type": "integer",
				"name": "data",
				"subtype": null,
				"description": "DATA_* flag"
			}
		],
		"id": 293,
		"sleep": 1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRequestSimulatorData",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRequestAgentData": {
		"returnType": "key",
		"description": "Requests data about agent id. When data is available the dataserver event will be raised",
		"parameters": [
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "data",
				"subtype": null,
				"description": "DATA_* flag"
			}
		],
		"id": 155,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRequestAgentData",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llList2ListStrided": {
		"returnType": "list",
		"returns": "of all the entries in the strided list whose index is a multiple of stride in the range start to end.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "start",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "end",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "stride",
				"subtype": null,
				"description": ""
			}
		],
		"id": 198,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llList2ListStrided",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetForceAndTorque": {
		"description": "Sets the force and torque of object (if the script is physical)",
		"parameters": [
			{
				"type": "vector",
				"name": "force",
				"subtype": null,
				"description": "directional force"
			},
			{
				"type": "vector",
				"name": "torque",
				"subtype": null,
				"description": "torque force"
			},
			{
				"type": "integer",
				"name": "local",
				"subtype": "boolean",
				"description": "boolean, if TRUE force is treated as a local directional vector, if FALSE force is treated as a region directional vector "
			}
		],
		"id": 76,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetForceAndTorque",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetTouchText": {
		"description": "Displays text rather than the default \"Touch\" in the right-click menu",
		"parameters": [
			{
				"type": "string",
				"name": "text",
				"subtype": null,
				"description": ""
			}
		],
		"id": 241,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetTouchText",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetScriptName": {
		"returnType": "string",
		"returns": "that is the name of the script that called this function.",
		"parameters": [],
		"id": 167,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetScriptName",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRequestSecureURL": {
		"returnType": "key",
		"returns": "used for identifying the result of the request in the http_request event.",
		"description": "Requests one HTTPS:// (SSL) URL for use by this object. The http_request event is triggered with result of the request. HTTPS-in uses port 12043.",
		"parameters": [],
		"id": 346,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRequestSecureURL",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llReplaceSubString": {
		"returnType": "string",
		"returns": "that is the result of replacing the first count matching instances pattern in src with replacement_pattern.",
		"parameters": [
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "pattern",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "replacement_pattern",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "count",
				"subtype": null,
				"description": ""
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llReplaceSubString",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llTakeCamera": {
		"description": "This function is recognized by the compiler, but was never implemented in Second Life.",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": ""
			}
		],
		"id": 115,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llTakeCamera",
		"deprecated": "llSetCameraParams",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetTorque": {
		"description": "Sets the torque of object (if the script is physical)",
		"parameters": [
			{
				"type": "vector",
				"name": "torque",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "local",
				"subtype": "boolean",
				"description": "boolean, if TRUE force is treated as a local directional vector, if FALSE force is treated as a region directional vector "
			}
		],
		"id": 74,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetTorque",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetObjectPrimCount": {
		"returnType": "integer",
		"returns": "that is the total number of prims in the object that contains prim.",
		"parameters": [
			{
				"type": "key",
				"name": "prim",
				"subtype": null,
				"description": "prim UUID that is in the same region "
			}
		],
		"id": 323,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetObjectPrimCount",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSleep": {
		"description": "Puts the script to sleep for sec seconds. The script will not do anything during this time.The script will sleep at least until the next server-frame, which happen every (1/45 = ~0.02222) seconds under normal conditions.If sec is zero or less, the script will not sleep at all.",
		"parameters": [
			{
				"type": "float",
				"name": "sec",
				"subtype": null,
				"description": "seconds to sleep"
			}
		],
		"id": 108,
		"sleep": 0,
		"energy": 0,
		"wiki": "https://wiki.secondlife.com/wiki/llSleep",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetColor": {
		"description": "Sets the Blinn-Phong color on face of the prim.",
		"parameters": [
			{
				"type": "vector",
				"name": "color",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number or ALL_SIDES "
			}
		],
		"id": 49,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetColor",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llWind": {
		"returnType": "vector",
		"returns": "that is the wind velocity at the prim's position + offset",
		"parameters": [
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": ""
			}
		],
		"id": 44,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llWind",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRemoteDataReply": {
		"description": "Send an XML-RPC reply on channel to message_id with payload of string sdata and integer idata",
		"parameters": [
			{
				"type": "key",
				"name": "channel",
				"subtype": "channel",
				"description": ""
			},
			{
				"type": "key",
				"name": "message_id",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "sdata",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "idata",
				"subtype": null,
				"description": ""
			}
		],
		"id": 256,
		"sleep": 3,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRemoteDataReply",
		"deprecated": "LSL_http_server",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetRegionFlags": {
		"returnType": "integer",
		"returns": "that is the region flags (REGION_FLAG_*) for the region the object is in.",
		"parameters": [],
		"id": 318,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetRegionFlags",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetPhysicsMaterial": {
		"returnType": "list",
		"returns": "in the form [ float gravity_multiplier, float restitution, float friction, float density ]",
		"description": "Used to get the physical characteristics of an object.",
		"parameters": [],
		"id": null,
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llGetPhysicsMaterial",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llLinksetDataDeleteProtected": {
		"parameters": [],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llLinksetDataDeleteProtected",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llTriggerSound": {
		"description": "Plays sound at volume, centered at but not attached to object.",
		"parameters": [
			{
				"type": "string",
				"name": "sound",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "float",
				"name": "volume",
				"subtype": null,
				"description": ""
			}
		],
		"id": 91,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llTriggerSound",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSHA1String": {
		"returnType": "string",
		"returns": "of 40 hex characters that is the SHA-1 security hash of src.",
		"parameters": [
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": ""
			}
		],
		"id": 343,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSHA1String",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llParseStringKeepNulls": {
		"returnType": "list",
		"returns": "that is src broken into a list, discarding separators, keeping spacers, keeping any null values generated.",
		"parameters": [
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": "source string"
			},
			{
				"type": "list",
				"name": "separators",
				"subtype": null,
				"description": "separators to be discarded"
			},
			{
				"type": "list",
				"name": "spacers",
				"subtype": null,
				"description": "spacers to be kept"
			}
		],
		"id": 285,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llParseStringKeepNulls",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llReleaseCamera": {
		"description": "This function is recognized by the compiler, but was never implemented in Second Life.",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": ""
			}
		],
		"id": 116,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llReleaseCamera",
		"deprecated": "llClearCameraParams",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llUnescapeURL": {
		"returnType": "string",
		"returns": "that is an unescaped/unencoded version of url, replacing \"%20\" with spaces etc.",
		"parameters": [
			{
				"type": "string",
				"name": "url",
				"subtype": null,
				"description": "A (preferably valid and escaped URL) string."
			}
		],
		"id": 308,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llUnescapeURL",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRegionSayTo": {
		"description": "Says<ref name=\"send\">In this context, saying or speaking means that a message is being sent to the recipient (object or avatar); it's not about audio/voice chat!</ref> the text supplied in string msg on channel supplied in integer channel to the object or avatar specified by target",
		"parameters": [
			{
				"type": "key",
				"name": "target",
				"subtype": null,
				"description": "group, avatar, or prim UUID that is in the same region "
			},
			{
				"type": "integer",
				"name": "channel",
				"subtype": "chat",
				"description": ""
			},
			{
				"type": "string",
				"name": "msg",
				"subtype": null,
				"description": ""
			}
		],
		"id": 363,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRegionSayTo",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llParcelMediaQuery": {
		"returnType": "list",
		"returns": "containing results of query. The results are in the same order as the request.",
		"parameters": [
			{
				"type": "list",
				"name": "query",
				"subtype": null,
				"description": ""
			}
		],
		"id": 299,
		"sleep": 2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llParcelMediaQuery",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llListInsertList": {
		"returnType": "list",
		"returns": "that contains all the elements from dest but with the elements from src inserted at position start.",
		"parameters": [
			{
				"type": "list",
				"name": "dest",
				"subtype": null,
				"description": ""
			},
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "start",
				"subtype": null,
				"description": ""
			}
		],
		"id": 200,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llListInsertList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llReleaseURL": {
		"description": "Releases the specified URL, it will no longer be usable.",
		"parameters": [
			{
				"type": "string",
				"name": "url",
				"subtype": null,
				"description": "URL to release"
			}
		],
		"id": 347,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llReleaseURL",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSitOnLink": {
		"returnType": "Integer",
		"description": "The avatar specified by agent_id is forced to sit on the sit target of the prim indicated by the link parameter.  If the specified link is already occupied, the simulator searches down the chain of prims in the link set looking for an available sit target.  ",
		"parameters": [
			{
				"type": "key",
				"name": "agent_id",
				"subtype": null,
				"description": "UUID of the avatar being forced to sit"
			},
			{
				"type": "integer",
				"name": "link",
				"subtype": null,
				"description": "Link number for the prim containing the desired sit target"
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llSitOnLink",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llGetObjectPermMask": {
		"returnType": "integer",
		"returns": "of the requested permission category for the object containing this script.",
		"parameters": [
			{
				"type": "integer",
				"name": "category",
				"subtype": null,
				"description": "MASK_* flag"
			}
		],
		"id": 287,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetObjectPermMask",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRemoveFromLandPassList": {
		"description": "Remove avatar from the land pass list.",
		"parameters": [
			{
				"type": "key",
				"name": "avatar",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			}
		],
		"id": 311,
		"sleep": 0.1,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRemoveFromLandPassList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llXorBase64Strings": {
		"returnType": "string",
		"returns": "that is a Base64 string of s1 xor'ed with s2.",
		"parameters": [
			{
				"type": "string",
				"name": "str1",
				"subtype": null,
				"description": "Base64 string"
			},
			{
				"type": "string",
				"name": "str2",
				"subtype": null,
				"description": "Base64 string"
			}
		],
		"id": 262,
		"sleep": 0.3,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llXorBase64Strings",
		"deprecated": "llXorBase64",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llParcelMediaCommandList": {
		"description": "Controls the playback of movies and other multimedia resources on a parcel or for an agent.",
		"parameters": [
			{
				"type": "list",
				"name": "commandList",
				"subtype": null,
				"description": "A list of integer PARCEL_MEDIA_COMMAND_* flags and their parameters"
			}
		],
		"id": 298,
		"sleep": 2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llParcelMediaCommandList",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llWhisper": {
		"description": "Whispers the text supplied in string msg on channel supplied in integer channel.",
		"parameters": [
			{
				"type": "integer",
				"name": "channel",
				"subtype": "chat",
				"description": "input chat channel, any integer value "
			},
			{
				"type": "string",
				"name": "msg",
				"subtype": null,
				"description": ""
			}
		],
		"id": 22,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llWhisper",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llWater": {
		"returnType": "float",
		"returns": "that is the water height below the prim's position + offset",
		"parameters": [
			{
				"type": "vector",
				"name": "offset",
				"subtype": null,
				"description": ""
			}
		],
		"id": 153,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llWater",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetVehicleRotationParam": {
		"description": "Sets the vehicle rotation parameter param to rot.",
		"parameters": [
			{
				"type": "integer",
				"name": "param",
				"subtype": "vehicle_rotation",
				"description": "VEHICLE_* flag"
			},
			{
				"type": "rotation",
				"name": "rot",
				"subtype": null,
				"description": ""
			}
		],
		"id": 235,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetVehicleRotationParam",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llParseString2List": {
		"returnType": "list",
		"returns": "that is src broken into a list of strings, discarding separators, keeping spacers, discards any null (empty string) values generated.",
		"parameters": [
			{
				"type": "string",
				"name": "src",
				"subtype": null,
				"description": "source string"
			},
			{
				"type": "list",
				"name": "separators",
				"subtype": null,
				"description": "separators to be discarded"
			},
			{
				"type": "list",
				"name": "spacers",
				"subtype": null,
				"description": "spacers to be kept"
			}
		],
		"id": 214,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llParseString2List",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSoundPreload": {
		"description": "Preloads sound on viewers within range.",
		"parameters": [
			{
				"type": "string",
				"name": "sound",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			}
		],
		"id": 126,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSoundPreload",
		"deprecated": "llPreloadSound",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llTargetOmega": {
		"description": "Rotates the object/prim around axis at a rate of spinrate * llVecMag(axis) in radians per second with strength gain.",
		"parameters": [
			{
				"type": "vector",
				"name": "axis",
				"subtype": null,
				"description": "arbitrary axis to rotate the object around"
			},
			{
				"type": "float",
				"name": "spinrate",
				"subtype": null,
				"description": "rate of rotation in radians per second"
			},
			{
				"type": "float",
				"name": "gain",
				"subtype": null,
				"description": "also modulates the final spinrate and disables the rotation behavior if zero"
			}
		],
		"id": 133,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llTargetOmega",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llTriggerSoundLimited": {
		"description": "Plays sound at volume, centered at but not attached to the object, limited to the box defined by vectors top_north_east and bottom_south_west",
		"parameters": [
			{
				"type": "string",
				"name": "sound",
				"subtype": null,
				"description": "an item in the inventory of the prim this script is in "
			},
			{
				"type": "float",
				"name": "volume",
				"subtype": null,
				"description": ""
			},
			{
				"type": "vector",
				"name": "top_north_east",
				"subtype": null,
				"description": "position in region coordinates "
			},
			{
				"type": "vector",
				"name": "bottom_south_west",
				"subtype": null,
				"description": "position in region coordinates "
			}
		],
		"id": 212,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llTriggerSoundLimited",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetVehicleFloatParam": {
		"description": "Sets the vehicle float parameter param to value.",
		"parameters": [
			{
				"type": "integer",
				"name": "param",
				"subtype": "vehicle_float",
				"description": "VEHICLE_* flag"
			},
			{
				"type": "float",
				"name": "value",
				"subtype": null,
				"description": ""
			}
		],
		"id": 233,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetVehicleFloatParam",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSensor": {
		"description": "Performs a single scan for name and id with type within radius meters and arc radians of forward vector.Script execution continues immediately. When the scan is completed, a sensor or no_sensor event is put in the event queue.",
		"parameters": [
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": "object or avatar name"
			},
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": "group, avatar, or prim UUID that is in the same region "
			},
			{
				"type": "integer",
				"name": "type",
				"subtype": null,
				"description": "mask (AGENT, AGENT_BY_LEGACY_NAME, AGENT_BY_USERNAME, ACTIVE, PASSIVE, and/or SCRIPTED)"
			},
			{
				"type": "float",
				"name": "radius",
				"subtype": null,
				"description": "distance in meters from center, 0.0 <= radius <= 96.0"
			},
			{
				"type": "float",
				"name": "arc",
				"subtype": null,
				"description": "the max angle between the object's local X-axis and detectable objects, 0.0 <= arc <= PI"
			}
		],
		"id": 28,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSensor",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSubStringIndex": {
		"returnType": "integer",
		"returns": "that is the index of the first instance of pattern in source.",
		"parameters": [
			{
				"type": "string",
				"name": "source",
				"subtype": null,
				"description": "what to search in (haystack)"
			},
			{
				"type": "string",
				"name": "pattern",
				"subtype": null,
				"description": "what to search for (needle)"
			}
		],
		"id": 181,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSubStringIndex",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetTextureAnim": {
		"description": "Animate the texture on the specified face/faces by setting the texture scale and offset.",
		"parameters": [
			{
				"type": "integer",
				"name": "mode",
				"subtype": "texture_anim",
				"description": "Mask of Mode flags"
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": "face",
				"description": "face number or ALL_SIDES "
			},
			{
				"type": "integer",
				"name": "sizex",
				"subtype": null,
				"description": "Horizontal frames (ignored for ROTATE and SCALE)"
			},
			{
				"type": "integer",
				"name": "sizey",
				"subtype": null,
				"description": "Vertical frames (ignored for ROTATE and SCALE)"
			},
			{
				"type": "float",
				"name": "start",
				"subtype": null,
				"description": "Start position/frame number (or radians for ROTATE)"
			},
			{
				"type": "float",
				"name": "length",
				"subtype": null,
				"description": "Number of frames to display (or radians for ROTATE)"
			},
			{
				"type": "float",
				"name": "rate",
				"subtype": null,
				"description": "Frames per second, or radians per second when ROTATE is set, or UV coordinates when SMOOTH is set (must not be zero)"
			}
		],
		"id": 211,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetTextureAnim",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRotBetween": {
		"returnType": "rotation",
		"returns": "that is the shortest rotation between the direction start and the direction end ",
		"parameters": [
			{
				"type": "vector",
				"name": "start",
				"subtype": null,
				"description": ""
			},
			{
				"type": "vector",
				"name": "end",
				"subtype": null,
				"description": ""
			}
		],
		"id": 21,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRotBetween",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRequestPermissions": {
		"description": "Ask agent for permissions to run certain classes of functions.",
		"parameters": [
			{
				"type": "key",
				"name": "agent",
				"subtype": null,
				"description": "avatar UUID that is in the same region "
			},
			{
				"type": "integer",
				"name": "permissions",
				"subtype": "permission",
				"description": "Permission mask (bitfield containing the permissions to request)."
			}
		],
		"id": 136,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRequestPermissions",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetKeyframedMotion": {
		"description": "Specify a list of positions, orientations, and timings to be followed by an object. The object will be smoothly moved between those keyframes by the simulator.Collisions with other nonphysical or keyframed objects will be ignored (no script events will fire and collision processing will not occur). Collisions with physical objects will be computed and reported, but the keyframed object will be unaffected by those collisions. (The physical object will be affected, however.) ",
		"parameters": [
			{
				"type": "list",
				"name": "keyframes",
				"subtype": null,
				"description": "Strided keyframe list of the form:* vector position (optional via KFM_TRANSLATION and KFM_DATA)* rotation orientation (optional via KFM_ROTATION and KFM_DATA)* float timeEach keyframe is interpreted relative to the previous transform of the object. Time values must be 1/9s. or greater. For example, consider the following list of keyframes: [<0, 0, 10>, ZERO_ROTATION, 5, <0, 0, 0>, ZERO_ROTATION, 5, <0, 0, -10>, ZERO_ROTATION, 5]This would cause the object to move up 10m over the course of 5s. It would then remain at the location for 5s before moving down 10m over the course of another 5s.An empty list will terminate any keyframed animation currently playing. "
			},
			{
				"type": "list",
				"name": "options",
				"subtype": "instructions",
				"description": "modifiers and future options "
			}
		],
		"id": null,
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llSetKeyframedMotion",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llListSortStrided": {
		"returnType": "list",
		"returns": "that is src sorted by the stride_index item in every stride.",
		"description": "llListSortStrided is llListSort with the added parameter of stride_index, adding the flexibility to sort by any item in the stride.  These routines use the same underlying code and have the same computational complexity.",
		"parameters": [
			{
				"type": "list",
				"name": "src",
				"subtype": null,
				"description": "List to be sorted."
			},
			{
				"type": "integer",
				"name": "stride",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "stride_index",
				"subtype": null,
				"description": "The index within the stride to sort by. stride_index is 0-indexed. The first element is 0, second 1, etc. An index of 0 is functionally identical to using llListSort."
			},
			{
				"type": "integer",
				"name": "ascending",
				"subtype": null,
				"description": "if TRUE then the sort order is ascending, otherwise the order is descending."
			}
		],
		"id": 184,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llListSortStrided",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetText": {
		"description": "Displays text that hovers over the prim with specific color and translucency (specified with alpha).",
		"parameters": [
			{
				"type": "string",
				"name": "text",
				"subtype": null,
				"description": ""
			},
			{
				"type": "vector",
				"name": "color",
				"subtype": null,
				"description": ""
			},
			{
				"type": "float",
				"name": "alpha",
				"subtype": null,
				"description": ""
			}
		],
		"id": 152,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetText",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetLinkTextureAnim": {
		"description": "Animate the texture on the specified face/faces of the specified prim/prims by setting the texture scale and offset.  Identical to llSetTextureAnim except able to modify any prim in the link set.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": "Link number (0: unlinked, 1: root prim, >1: child prims and seated avatars) or a LINK_* flag "
			},
			{
				"type": "integer",
				"name": "mode",
				"subtype": "texture_anim",
				"description": "bit field of Mode flags"
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number or ALL_SIDES "
			},
			{
				"type": "integer",
				"name": "sizex",
				"subtype": null,
				"description": "horizontal frames (ignored for ROTATE and SCALE)"
			},
			{
				"type": "integer",
				"name": "sizey",
				"subtype": null,
				"description": "vertical frames (ignored for ROTATE and SCALE)"
			},
			{
				"type": "float",
				"name": "start",
				"subtype": null,
				"description": "Start position/frame number (or radians for ROTATE)"
			},
			{
				"type": "float",
				"name": "length",
				"subtype": null,
				"description": "number of frames to display (or radians for ROTATE)"
			},
			{
				"type": "float",
				"name": "rate",
				"subtype": null,
				"description": "Frames per second, or radians per second when ROTATE is set, or UV coordinates when SMOOTH is set (must not be zero)"
			}
		],
		"id": 356,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetLinkTextureAnim",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetLinkMedia": {
		"returnType": "integer",
		"returns": "that is a STATUS_* flag which details the success/failure of the operation(s).",
		"description": "Set the media params for a particular face on the linked prim(s) without a delay.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": "Link number (0: unlinked, 1: root prim, >1: child prims and seated avatars) or a LINK_* flag "
			},
			{
				"type": "integer",
				"name": "face",
				"subtype": null,
				"description": "face number "
			},
			{
				"type": "list",
				"name": "params",
				"subtype": "instructions",
				"description": "a set of name/value pairs (in no particular order)"
			}
		],
		"id": null,
		"sleep": 0,
		"energy": 0,
		"wiki": "https://wiki.secondlife.com/wiki/llSetLinkMedia",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llXorBase64": {
		"returnType": "string",
		"returns": "that is a Base64 XOR of str1 and str2.",
		"description": "Correctly performs an exclusive or on two Base64 strings.",
		"parameters": [
			{
				"type": "string",
				"name": "str1",
				"subtype": null,
				"description": "Base64 string"
			},
			{
				"type": "string",
				"name": "str2",
				"subtype": null,
				"description": "Base64 string"
			}
		],
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llXorBase64",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llUpdateKeyValue": {
		"returnType": "key",
		"returns": "that can be used to identify the corresponding dataserver event to determine if this command succeeded or failed and the results.",
		"description": "Start an asynchronous transaction to update a key-value pair associated with the script's Experience with the given key (k) and value (v).",
		"parameters": [
			{
				"type": "string",
				"name": "k",
				"subtype": null,
				"description": ""
			},
			{
				"type": "string",
				"name": "v",
				"subtype": null,
				"description": ""
			},
			{
				"type": "integer",
				"name": "checked",
				"subtype": "boolean",
				"description": "If TRUE the update will only happen if original_value matches the value in the key-value store."
			},
			{
				"type": "string",
				"name": "original_value",
				"subtype": null,
				"description": "The value to compare with the current value in the key-value store."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llUpdateKeyValue",
		"experimental": false,
		"godMode": false,
		"experience": true,
		"broken": false
	},
	"llTakeControls": {
		"description": "Allows for intercepting of keyboard and mouse clicks, specifically those specified by controls, from the agent the script has permissions for.",
		"parameters": [
			{
				"type": "integer",
				"name": "controls",
				"subtype": null,
				"description": "bitfield of CONTROL_* flags"
			},
			{
				"type": "integer",
				"name": "accept",
				"subtype": "boolean",
				"description": "boolean, determines whether control events are generated"
			},
			{
				"type": "integer",
				"name": "pass_on",
				"subtype": "boolean",
				"description": "boolean, determines whether controls perform their normal functions"
			}
		],
		"id": 111,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llTakeControls",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llMessageLinked": {
		"description": "The purpose of this function is to allow scripts in the same object to communicate. It triggers a link_message event with the same parameters num, str, and id in all scripts in the prim(s) described by link.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": ""
			},
			{
				"type": "integer",
				"name": "num",
				"subtype": null,
				"description": "Value of the second parameter of the resulting link_message event."
			},
			{
				"type": "string",
				"name": "str",
				"subtype": null,
				"description": "Value of the third parameter of the resulting link_message event."
			},
			{
				"type": "key",
				"name": "id",
				"subtype": null,
				"description": "Value of the fourth parameter of the resulting link_message event."
			}
		],
		"id": 164,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llMessageLinked",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llTeleportAgentGlobalCoords": {
		"description": "Teleports an agent to region_coordinates within a region specified by global_coordinates.A region's global coordinates can be retrieved using llRequestSimulatorData(\"region name\", DATA_SIM_POS)If the destination is in the current region, the avatar will land facing look_at as a position within that region. Otherwise, look_at is treated as a unit direction.",
		"parameters": [
			{
				"type": "key",
				"name": "agent",
				"subtype": null,
				"description": "(the avatar to teleport, must be the owner)"
			},
			{
				"type": "vector",
				"name": "global_coordinates",
				"subtype": null,
				"description": "Global coordinates of the destination region. Can be retrieved by using llRequestSimulatorData(region_name, DATA_SIM_POS)."
			},
			{
				"type": "vector",
				"name": "region_coordinates",
				"subtype": null,
				"description": "where the avatar should land."
			},
			{
				"type": "vector",
				"name": "look_at",
				"subtype": "direction",
				"description": "direction the avatar should be facing on landing (east, west, etc)."
			}
		],
		"sleep": null,
		"energy": null,
		"wiki": "https://wiki.secondlife.com/wiki/llTeleportAgentGlobalCoords",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llRemoteLoadScriptPin": {
		"description": "Copy script name into target and set to running with a start_param only if target's pin matches pin",
		"parameters": [
			{
				"type": "key",
				"name": "target",
				"subtype": null,
				"description": "prim UUID that is in the same region "
			},
			{
				"type": "string",
				"name": "name",
				"subtype": null,
				"description": "a script in the inventory of the prim this script is in "
			},
			{
				"type": "integer",
				"name": "pin",
				"subtype": null,
				"description": "Must match pin set by llSetRemoteScriptAccessPin"
			},
			{
				"type": "integer",
				"name": "running",
				"subtype": "boolean",
				"description": "boolean, if TRUE the script is set as running, if FALSE the script is not set as running "
			},
			{
				"type": "integer",
				"name": "start_param",
				"subtype": null,
				"description": "value returned by llGetStartParameter in the target script."
			}
		],
		"id": 253,
		"sleep": 3,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llRemoteLoadScriptPin",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetPrimitiveParams": {
		"description": "Sets the prim's parameters according to rules.",
		"parameters": [
			{
				"type": "list",
				"name": "rules",
				"subtype": "instructions",
				"description": ""
			}
		],
		"id": 259,
		"sleep": 0.2,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetPrimitiveParams",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llGetLinkPrimitiveParams": {
		"returnType": "list",
		"description": "Identical to llGetPrimitiveParams except that it acts on the prim specified by the link number given.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": "to get the parameters of"
			},
			{
				"type": "list",
				"name": "params",
				"subtype": "instructions",
				"description": "PRIM_* flags"
			}
		],
		"id": 354,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llGetLinkPrimitiveParams",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetLinkPrimitiveParams": {
		"description": "Sets the prims parameters according to rules.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": ""
			},
			{
				"type": "list",
				"name": "rules",
				"subtype": "instructions",
				"description": ""
			}
		],
		"id": 353,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetLinkPrimitiveParams",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	},
	"llSetLinkPrimitiveParamsFast": {
		"description": "Sets the prims parameters according to rules.",
		"parameters": [
			{
				"type": "integer",
				"name": "link",
				"subtype": "link",
				"description": ""
			},
			{
				"type": "list",
				"name": "rules",
				"subtype": "instructions",
				"description": ""
			}
		],
		"id": 353,
		"sleep": 0,
		"energy": 10,
		"wiki": "https://wiki.secondlife.com/wiki/llSetLinkPrimitiveParamsFast",
		"experimental": false,
		"godMode": false,
		"experience": false,
		"broken": false
	}
}